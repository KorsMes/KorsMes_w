<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="mes.kors.web.mapper.ApiMapper">
	
	<!-- 구매단가발행 조회 -->
	<select id = "paf06_list" parameterType="hashmap" resultType="hashmap">
		SELECT  A.COMPANY,   
			        A.ITNBR,   
			        A.NAME ITEM_NAME_K,   
			        A.SPEC1 NORM1,   
			        A.UNMSR PUR_UM,   
			        B.CURRENCY,   
			        B.VENDOR,  
			        SF_BUYER_NM(B.VENDOR) VENDOR_NAME,     
			        B.SUPPLY,   
			        B.TEMP_PRICE,   
			        B.PAST_PRICE,   
			        B.LAST_PRICE,
			        TO_CHAR(B.START_DATE, 'yyyy-mm-dd') START_DATE
		FROM SALE.SAB01_MST A, PAF03_MST B
		WHERE B.COMPANY = #{company_cd} 
		<if test = "itnbr != null and itnbr != ''">
		    AND    B.ITEM <![CDATA[ >= ]]> #{itnbr}
		</if> 
		<if test = "by_cd != null and by_cd != ''">
		    AND  (B.VENDOR  = #{by_cd} OR #{by_cd} = '*')
	    </if>
		    AND  A.COMPANY = B.COMPANY
		    AND    A.ITNBR = B.ITEM 
		ORDER BY A.itnbr
		<if test="page != null and page != ''">
			FETCH FIRST (#{page} * 30) ROWS ONLY
		</if>    
	</select>
	
	<!-- 지출내역발행 조회 -->
	<select id = "pda12_list" parameterType="hashmap" resultType="hashmap">
		SELECT  B.CMPY_CD,
					B.ACT_UNIT,
			        TO_CHAR(B.DRF_DATE, 'YYYY-MM-DD') DRF_DATE,
			        B.DRF_SEQ,          
			        B.SEQ,
			        TO_CHAR(B.EXP_DATE, 'YYYY-MM-DD') EXP_DATE,
			        B.AC_CD, 
			        B.AMT,
			        B.CUST_CD,          
			        B.CUST_NM,          
			        B.PRO_FLAG,     
			        B.EXP_REMARKS,   
			        B.REMARKS,   
			        C.DEPT_ID,
			        A.SABN
		FROM PROD.PDA10_MST A, PROD.PDA10_DTL B, SW_USER C
		WHERE A.SABN = C.USER_ID
		AND A.CMPY_CD = B.CMPY_CD
		AND A.ACT_UNIT = B.ACT_UNIT
		AND A.DRF_DATE = B.DRF_DATE
		AND A.DRF_SEQ =  B.DRF_SEQ
		<if test = "cmpy_cd != null and cmpy_cd != ''">
			AND A.CMPY_CD = #{cmpy_cd}
		</if>
		<if test = "act_unit != null and act_unit != ''">
			AND A.ACT_UNIT = #{act_unit}
		</if>
		<if test = "drf_date_fr != null and drf_date_fr != '' and drf_date_to != null and drf_date_to != ''">
			AND A.DRF_DATE BETWEEN REPLACE(substr(#{drf_date_fr}, 1, 10), '-', '') AND REPLACE(substr(#{drf_date_to}, 1, 10), '-', '')
		</if>
		<if test = "sabn != null and sabn != ''">
			AND A.SABN LIKE #{sabn}||'%'
		</if>
		<if test = "status != null and status != ''">
			AND A.STAT LIKE  nvl(#{status}, '%')
		</if>
		<if test = "ac_cd != null and ac_cd != ''">
			AND nvl(B.AC_CD,'%') LIKE #{ac_cd}||'%'
		</if>
		<if test = "exp_remarks != null and exp_remarks != ''">
			AND nvl(B.EXP_REMARKS,'%') LIKE '%'||#{exp_remarks}||'%'
		</if>
		<if test = "cust_nm != null and cust_nm != ''">
			AND nvl(B.CUST_NM,'%') LIKE '%'||#{cust_nm}||'%'
		</if>
		ORDER BY B.CMPY_CD ,B.ACT_UNIT, B.DRF_DATE, B.DRF_SEQ, B.SEQ
	</select>
	
	<!-- 견적서 발행(을지) 대메뉴 -->
	<select id = "scb10_list" parameterType="hashmap" resultType="hashmap">
		SELECT  DECODE(PNLNO, 0, TO_CHAR(GRPNO),  TO_CHAR(GRPNO) || '-' || PNLNO ) GRPNO,
					TO_CHAR(GRPNO) AS GROUP_NO,
			        PNLNO,
			        ITDSC,
			        DECODE(PNLNO, 0, '', SOQTY1) SOQTY1,
			        DECODE(PNLNO, 0, '', SOWPRC1 * DECODE(UPPER(VAT_YN), 'Y', 1.1, 1.0)) SOWPRC1,
			        DECODE(PNLNO, 0, '', SOWAMT1 * DECODE(UPPER(VAT_YN), 'Y', 1.1, 1.0)) SOWAMT1,
			        ITNBR,
			        GU0,
			        VAT_YN,
			        COST_YN,
			        PJTNO,
			        COMPANY,
			        SF_PJTNO_NM(#{company_cd}, '100', PJTNO) PJTNO_NM
			        FROM (    SELECT GRPNO,
			        PNLNO,
			        ITDSC,
			        SOQTY1,
			        SOWPRC1,
			        SOWAMT1,
			        ITNBR,
			        GU0,
			        'R_VAT_YN' AS VAT_YN,
			        'R_COST_YN' AS COST_YN,
			        PJTNO,
			        COMPANY
		FROM ( SELECT   A.GRPNO, 
		                B.PNLNO,
		                B.ITDSC,
		                A.SOQTY1 * B.SOQTY1 AS SOQTY1,
		                B.SOWPRC1 SOWPRC1,
		                A.SOQTY1 * B.SOWAMT1 AS SOWAMT1,
		                B.ITNBR,
		                '2' AS GU0,
		                A.PJTNO,
		                A.COMPANY
		        FROM (  SELECT GRPNO, ITNBR, ITDSC, SOQTY1, SOWPRC1_CONFIRM SOWPRC1, PJTNO, COMPANY
		                FROM SCA02_MST
		                WHERE COMPANY = #{company_cd} 
		                <if test = "pjtno != null and pjtno != ''">
		                	AND PJTNO = #{pjtno} 
		                </if>
		                AND GU0 = '1'
		             ) A,
		     ( SELECT GRPNO, PNLNO, ITNBR, ITDSC, SOQTY1, SOWPRC1_CONFIRM SOWPRC1, SOWAMT1, COMPANY
		        FROM SCA02_MST
		        WHERE COMPANY = #{company_cd}  
		        	<if test = "pjtno != null and pjtno != ''">
		              AND PJTNO = #{pjtno} 
		            </if>
		              AND GU0 = '2' 
		              AND SUBSTR(ITNBR, 1, 1) != 'M'
		       UNION ALL
		       SELECT B1.GRPNO, B1.PNLNO, B2.ITNBR, B2.ITDSC, B2.SOQTY1, 0, B1.SOWAMT1, B1.COMPANY
		        FROM ( SELECT GRPNO, MIN(PNLNO) AS PNLNO, SUM(SOWAMT1) AS SOWAMT1, COMPANY
		                FROM SCA02_MST
		                WHERE COMPANY = #{company_cd} 
		                	<if test = "pjtno != null and pjtno != ''">
		                      AND PJTNO = #{pjtno} 
		                    </if>
		                      AND GU0 = '2' 
		                      AND SUBSTR(ITNBR, 1, 1) = 'M'
		                GROUP BY GRPNO, COMPANY ) B1,
		                SCA02_MST B2
		        WHERE B2.COMPANY = #{company_cd}  
		        	<if test = "pjtno != null and pjtno != ''">
		              AND B2.PJTNO = #{pjtno} 
	              	</if>
		              AND B1.GRPNO = B2.GRPNO 
		              AND B1.PNLNO = B2.PNLNO 
		              AND B2.ITMNO = 0 ) B
		WHERE A.GRPNO = B.GRPNO
		UNION ALL
		SELECT  GRPNO, 
		        PNLNO, 
		        ITDSC, 
		        0, 
		        0, 
		        0, 
		        ' ', 
		        GU0, 
		        PJTNO, 
		        COMPANY
		FROM SCA02_MST
		WHERE COMPANY = #{company_cd} 
		<if test = "pjtno != null and pjtno != ''">
			AND PJTNO = #{pjtno} 
		</if>
		AND GU0 = '1' )
		)
		WHERE PNLNO = '0'
		ORDER BY GRPNO, PNLNO
	</select>
	
	<!-- 견적서 발행(을지) 중메뉴 -->
	<select id = "scb10_list2" parameterType="hashmap" resultType="hashmap">
		SELECT  DECODE(PNLNO, 0, TO_CHAR(GRPNO),  TO_CHAR(GRPNO) || '-' || PNLNO ) GRPNO,
					TO_CHAR(GRPNO) AS GROUP_NO,
			        PNLNO,
			        ITDSC,
			        DECODE(PNLNO, 0, '', SOQTY1) SOQTY1,
			        DECODE(PNLNO, 0, '', SOWPRC1 * DECODE(UPPER(VAT_YN), 'Y', 1.1, 1.0)) SOWPRC1,
			        DECODE(PNLNO, 0, '', SOWAMT1 * DECODE(UPPER(VAT_YN), 'Y', 1.1, 1.0)) SOWAMT1,
			        ITNBR,
			        GU0,
			        VAT_YN,
			        COST_YN,
			        PJTNO,
			        COMPANY,
			        SF_PJTNO_NM(#{company_cd}, '100', PJTNO) PJTNO_NM
			        FROM (    SELECT GRPNO,
			        PNLNO,
			        ITDSC,
			        SOQTY1,
			        SOWPRC1,
			        SOWAMT1,
			        ITNBR,
			        GU0,
			        'R_VAT_YN' AS VAT_YN,
			        'R_COST_YN' AS COST_YN,
			        PJTNO,
			        COMPANY
		FROM ( SELECT   A.GRPNO, 
		                B.PNLNO,
		                B.ITDSC,
		                A.SOQTY1 * B.SOQTY1 AS SOQTY1,
		                B.SOWPRC1 SOWPRC1,
		                A.SOQTY1 * B.SOWAMT1 AS SOWAMT1,
		                B.ITNBR,
		                '2' AS GU0,
		                A.PJTNO,
		                A.COMPANY
		        FROM (  SELECT GRPNO, ITNBR, ITDSC, SOQTY1, SOWPRC1_CONFIRM SOWPRC1, PJTNO, COMPANY
		                FROM SCA02_MST
		                WHERE COMPANY = #{company_cd} 
		                <if test = "pjtno != null and pjtno != ''">
		                	AND PJTNO = #{pjtno} 
		                </if>
		                AND GU0 = '1'
		             ) A,
		     ( SELECT GRPNO, PNLNO, ITNBR, ITDSC, SOQTY1, SOWPRC1_CONFIRM SOWPRC1, SOWAMT1, COMPANY
		        FROM SCA02_MST
		        WHERE COMPANY = #{company_cd}  
		        	<if test = "pjtno != null and pjtno != ''">
		              AND PJTNO = #{pjtno} 
		            </if>
		              AND GU0 = '2' 
		              AND SUBSTR(ITNBR, 1, 1) != 'M'
		       UNION ALL
		       SELECT B1.GRPNO, B1.PNLNO, B2.ITNBR, B2.ITDSC, B2.SOQTY1, 0, B1.SOWAMT1, B1.COMPANY
		        FROM ( SELECT GRPNO, MIN(PNLNO) AS PNLNO, SUM(SOWAMT1) AS SOWAMT1, COMPANY
		                FROM SCA02_MST
		                WHERE COMPANY = #{company_cd} 
		                	<if test = "pjtno != null and pjtno != ''">
		                      AND PJTNO = #{pjtno} 
		                    </if>
		                      AND GU0 = '2' 
		                      AND SUBSTR(ITNBR, 1, 1) = 'M'
		                GROUP BY GRPNO, COMPANY ) B1,
		                SCA02_MST B2
		        WHERE B2.COMPANY = #{company_cd}  
		        	<if test = "pjtno != null and pjtno != ''">
		              AND B2.PJTNO = #{pjtno} 
	              	</if>
		              AND B1.GRPNO = B2.GRPNO 
		              AND B1.PNLNO = B2.PNLNO 
		              AND B2.ITMNO = 0 ) B
		WHERE A.GRPNO = B.GRPNO
		UNION ALL
		SELECT  GRPNO, 
		        PNLNO, 
		        ITDSC, 
		        0, 
		        0, 
		        0, 
		        ' ', 
		        GU0, 
		        PJTNO, 
		        COMPANY
		FROM SCA02_MST
		WHERE COMPANY = #{company_cd} 
		<if test = "pjtno != null and pjtno != ''">
			AND PJTNO = #{pjtno} 
		</if>
		AND GU0 = '1' )
		)
		WHERE PNLNO <![CDATA[ <> ]]> '0'
		<if test = "group_no != null and group_no != ''">
			AND GRPNO = #{group_no}
		</if>
		ORDER BY GRPNO, PNLNO
	</select>
	
	<!-- PJT 수주내역 조회 -->
	<select id = "sea02_list" parameterType="hashmap" resultType="hashmap">
		SELECT  A.COMPANY,
			        A.PLANT,
			        A.PJTNO,
			        A.SOFNO,
			        A.PJTNM,
			        A.DPTNO,
			        A.CVCOD,
			        A.CONTR,
			        A.ITGRP,
			        A.PJAMT,
			        A.MNHCD,
			        TO_CHAR(A.SODAT, 'YYYY-MM-DD') SODAT,
			        TO_CHAR(A.CODAT, 'YYYY-MM-DD') CODAT,
			        TO_CHAR(A.NADAT, 'YYYY-MM-DD') NADAT,
			        A.SUJU_GU,
			        A.PRODUCT_GU,
			        A.STATUS,
			        A.MV1,
			        A.BOGO,
			        A.FRMRT,
			        A.SWRT,
			        A.MCRT,
			        A.GSRT,
			        A.OUTORD,
			        A.OUTAMT,
			        A.EPNO,
			        A.SUNAM,
			        A.BANAM,
			        A.HADAT,
			        A.GATER,
			        A.SAVCD,
			        A.DLYA1,
			        A.DLYA2,
			        A.CONA1,
			        A.CONA2,
			        A.MANA1,
			        A.MANA2,
			        A.HOLA1,
			        A.HOLA2,
			        A.BALTE,
			        A.BALLV,
			        A.BALNA,
			        A.FILTE,
			        A.FILLV,
			        A.FILNA,
			        A.CERTM,
			        A.PACKM,
			        A.INDOM,
			        A.REMK1,
			        A.REMK2,
			        A.REMK3,
			        A.REMK4,
			        A.MATRA,
			        A.MATMT,
			        A.DRNOK,
			        A.RENOK,
			        A.PDCOM,
			        A.PACOM,
			        A.CHAMT,
			        A.MAAMT,
			        A.SUAMT,
			        A.SOMAH,
			        A.SIMAH,
			        A.SORAT,
			        A.PDRM1,
			        A.PDRM2,
			        A.ONDOM,
			        TO_CHAR(A.DRDAT, 'YYYY-MM-DD') DRDAT,
			        TO_CHAR(A.LASDT, 'YYYY-MM-DD') LASDT,
			        TO_CHAR(A.PDRCD, 'YYYY-MM-DD') PDRCD,
			        TO_CHAR(A.POJIT, 'YYYY-MM-DD') POJIT,
			        A.CHNAD,
			        A.MAVAT,
			        TO_CHAR(A.REDAT, 'YYYY-MM-DD') REDAT,
			        TO_CHAR(A.QCDAT, 'YYYY-MM-DD') QCDAT,
			        TO_CHAR(A.PDRCD1, 'YYYY-MM-DD') PDRCD1,
			        A.MV2,
			        A.WACOM,
			        A.POT,
			        A.CANCEL_YN,  
			        TO_CHAR(A.CONFIRM_DT, 'YYYY-MM-DD') CONFIRM_DT,
			        TO_CHAR(A.CANCEL_DT, 'YYYY-MM-DD') CANCEL_DT,
			        TO_CHAR(A.BOMDT, 'YYYY-MM-DD') BOMDT,
			        TO_CHAR(A.IPGODT, 'YYYY-MM-DD') IPGODT,
			        A.MATMT2,
			        A.STAT,    
			        A.CREATE_BY,  
			        TO_CHAR(A.CREATE_DATE, 'YYYY-MM-DD') CREATE_DATE,
			        A.UPDATE_BY,  
			        TO_CHAR(A.UPDATE_DATE, 'YYYY-MM-DD') UPDATE_DATE,
		(SELECT COUNT(*) FROM SCA09_DTL WHERE COMPANY = A.COMPANY AND PLANT=  A.PLANT AND PJTNO = A.PJTNO) PDTNO
		FROM SCA09_MST A
		WHERE A.COMPANY = #{company_cd}
		AND A.PLANT   = #{plant_cd}
		<if test="pjtno_fr != null and pjtno_fr != '' and pjtno_to != null and pjtno_to != ''">
			AND SUBSTR(A.PJTNO,3,6)  <![CDATA[ <= ]]> DECODE(#{pjtno_fr}, NULL, 'ZZZZZZZZ', SUBSTR(#{pjtno_to},3,6))
		</if>
		<if test="status != null and status != ''">
			AND (A.STATUS <![CDATA[ >= ]]> DECODE(#{status}, NULL, '00', #{status}) AND A.STATUS <![CDATA[ <= ]]> #{status}||'ZZ')
		</if>
		AND TO_CHAR(A.SODAT,'yyyymm') BETWEEN REPLACE(substr(#{fr_yymm}, 1, 7), '-', '') AND REPLACE(substr(#{to_yymm}, 1, 7), '-', '')
		ORDER BY SUBSTR(A.PJTNO,3,6) DESC
	</select>
	
	<!-- PJT 수주내역 조회 상세 -->
	<select id = "sea02_detail" parameterType="hashmap" resultType="hashmap">
		SELECT  'N' ROWNEW, 
			        PJTNO, 
			        SOFNO,
			        PJTNM,
			        DPTNO,
			        CVCOD,
			        EPNO,
			        SUNAM,
			        CONTR,
			        BANAM,
			        TO_CHAR(SODAT,'YYYY-MM-DD') SODAT,
			        ITGRP,
			        TO_CHAR(CODAT,'YYYY-MM-DD') CODAT,
			        PJAMT,
			        TO_CHAR(NADAT,'YYYY-MM-DD') NADAT,
			        GATER,
			        TO_CHAR(DRDAT,'YYYY-MM-DD') DRDAT,
			        MNHCD,
			        HADAT,
			        SAVCD,
			        DLYA1,
			        DLYA2,
			        CONA1,
			        CONA2,
			        MANA1,
			        MANA2,
			        HOLA1,
			        HOLA2,
			        BALTE,
			        BALLV,
			        BALNA,
			        FILTE,
			        FILLV,
			        FILNA,
			        CERTM,
			        PACKM,
			        INDOM,
			        '' compute_0044,
			        '' compute_0045,
			        '' compute_0046,
			        '' compute_0047,
			        '' compute_0048,
			        '' compute_0049,
			        '' compute_0050,
			        '' compute_0051,
			       TO_CHAR(PDRCD, 'YYYY-MM-DD') PDRCD,
			        SUJU_GU,
			        ONDOM,
			        CHNAD,
			        TO_CHAR(IPGODT, 'YYYY-MM-DD') IPGODT,
			        CHAMT,
			        MAAMT,
			        SUAMT,
			        SOMAH,
			        SIMAH,
			        SORAT,
			        MAVAT,
			        STATUS,
			        OUTORD,
			        OUTAMT,
			        REMK4,
			        REMK3,
			        REMK2,
			        REMK1,
			        COMPANY,
			        PLANT,
			        STAT,
			        CREATE_BY,
			        TO_CHAR(CREATE_DATE,'YYYY-MM-DD') CREATE_DATE,
			        UPDATE_BY,
			        TO_CHAR(UPDATE_DATE,'YYYY-MM-DD') UPDATE_DATE,
			        CREATE_GUBUN,
			        PJTGB
		FROM SCA09_MST
		WHERE COMPANY = #{company_cd}
		AND PLANT = #{plant_cd}
		AND PJTNO = #{pjtno}
	</select>
	
	<!-- PJT 수주내역 조회 (상세) 조회 -->
	<select id = "sea12_list1" parameterType="hashmap" resultType="hashmap">
		SELECT  SCA09_MST.PJTNO,
			        SCA09_MST.PJTNM,
			        SCA09_MST.CVCOD,
			        TO_CHAR(SCA09_MST.SODAT, 'YYYY-MM-DD') SODAT,
			        SCA09_MST.PJAMT,
			        TO_CHAR(SCA09_MST.NADAT, 'YYYY-MM-DD') NADAT,
			        SCA09_MST.ITGRP,
			        SCA09_MST.DPTNO,
			        SCA09_MST.EPNO,
			        SCA09_MST.STATUS,
			        SCA09_DTL.PJTSQ,
			        SCA09_DTL.GRITN,
			        SCA09_DTL.ITNBR,
			        SCA09_DTL.PJQTY,
			        SCA09_DTL.PJUNP,
			        SCA09_DTL.PJAMT,
			        TO_CHAR(SCA09_DTL.PJNAD, 'YYYY-MM-DD') PJNAD,
			        (SELECT NAME
			         FROM SALE.SAB03_MST
			         WHERE COMPANY = SCA09_DTL.COMPANY
			           AND ITNBR = SCA09_DTL.ITNBR) ITNBR_DESC
		FROM SCA09_MST, SCA09_DTL
		WHERE SCA09_MST.COMPANY = #{company_cd}
		<if test = "plant_cd != null and plant_cd != ''">
			AND SCA09_MST.PLANT = #{plant_cd}
		</if>
		<if test = "date_fr != null and date_fr != '' and date_to != null and date_to != ''">
			AND SCA09_MST.SODAT BETWEEN REPLACE(substr(#{date_fr}, 1, 10), '-', '') AND REPLACE(substr(#{date_to}, 1, 10), '-', '')
		</if>
		<if test = "cust_cd != null and cust_cd != ''">
			AND SCA09_MST.CVCOD LIKE #{cust_cd} || '%'
		</if>
		<if test = "dept_cd != null and dept_cd != ''">
			AND SCA09_MST.DPTNO LIKE #{dept_cd} || '%'
		</if>
		<if test = "opt != null and opt != ''">
			AND ((#{opt} = 'A') OR 
			     (#{opt} = 'N' AND SCA09_MST.STATUS = 'A0') OR 
			     (#{opt} = 'Y' AND SCA09_MST.STATUS <![CDATA[ <> ]]> 'A0')) 
	     </if>
		AND SCA09_MST.COMPANY = SCA09_DTL.COMPANY
		AND SCA09_MST.PLANT = SCA09_DTL.PLANT
		AND SCA09_MST.PJTNO = SCA09_DTL.PJTNO
		ORDER BY SUBSTR(SCA09_MST.PJTNO,3,6) , SCA09_MST.CVCOD, SCA09_MST.SODAT, SCA09_DTL.PJTSQ 
	</select>
	
	<!-- PJT 수주내역 조회 (업체별) 조회 -->
	<select id = "sea12_list2" parameterType="hashmap" resultType="hashmap">
		SELECT  SCA09_MST.CVCOD CVCOD,
			        NVL(SUM(SCA09_DTL.PJQTY),0) PJQTY,
			        NVL(SUM(SCA09_DTL.PJAMT),0) PJAMT
		FROM SCA09_MST, SCA09_DTL
		WHERE SCA09_MST.COMPANY = #{company_cd}
		AND SCA09_MST.PLANT = #{plant_cd}
		<if test = "date_fr != null and date_fr != '' and date_to != null and date_to != ''">
			AND SCA09_MST.SODAT BETWEEN REPLACE(substr(#{date_fr}, 1, 10), '-', '') AND REPLACE(substr(#{date_to}, 1, 10), '-', '')
		</if>
		<if test = "cust_cd != null and cust_cd != ''">
			AND SCA09_MST.CVCOD LIKE #{cust_cd} || '%'
		</if>
		<if test = "dept_cd != null and dept_cd != ''">
			AND SCA09_MST.DPTNO LIKE #{dept_cd} || '%'
		</if>
		<if test = "opt != null and opt != ''">
			AND (   (#{opt} = 'A') OR 
			        (#{opt} = 'N' AND SCA09_MST.STATUS = 'A0') OR 
			        (#{opt} = 'Y' AND SCA09_MST.STATUS <![CDATA[ <> ]]> 'A0')   ) 
        </if>
		AND SCA09_MST.COMPANY = SCA09_DTL.COMPANY
		AND SCA09_MST.PLANT = SCA09_DTL.PLANT
		AND SCA09_MST.PJTNO = SCA09_DTL.PJTNO
		GROUP BY SCA09_MST.CVCOD
		ORDER BY SCA09_MST.CVCOD
	</select>
	
	<!-- PJT 수주내역 조회 (부서별) 조회 -->
	<select id = "sea12_list3" parameterType="hashmap" resultType="hashmap">
		SELECT  SCA09_MST.DPTNO DPTNO,
			        SCA09_MST.EPNO EPNO,
			        NVL(SUM(SCA09_DTL.PJQTY),0) PJQTY,
			        NVL(SUM(SCA09_DTL.PJAMT),0) PJAMT
		FROM SCA09_MST, SCA09_DTL
		WHERE SCA09_MST.COMPANY = #{company_cd}
		AND SCA09_MST.PLANT = #{plant_cd}
		<if test = "date_fr != null and date_fr != '' and date_to != null and date_to != ''">
			AND SCA09_MST.SODAT BETWEEN REPLACE(substr(#{date_fr}, 1, 10), '-', '') AND REPLACE(substr(#{date_to}, 1, 10), '-', '')
		</if>
		<if test = "cust_cd != null and cust_cd != ''">
			AND SCA09_MST.CVCOD LIKE #{cust_cd} || '%'
		</if>
		<if test = "dept_cd != null and dept_cd != ''">
			AND SCA09_MST.DPTNO LIKE #{dept_cd} || '%'
		</if>
		<if test = "opt != null and opt != ''">
			AND (   (#{opt} = 'A') OR 
			        (#{opt} = 'N' AND SCA09_MST.STATUS = 'A0') OR 
			        (#{opt} = 'Y' AND SCA09_MST.STATUS <![CDATA[ <> ]]> 'A0')   )
        </if>
		AND SCA09_MST.COMPANY = SCA09_DTL.COMPANY
		AND SCA09_MST.PLANT = SCA09_DTL.PLANT
		AND SCA09_MST.PJTNO = SCA09_DTL.PJTNO
		GROUP BY SCA09_MST.DPTNO, SCA09_MST.EPNO
		ORDER BY SCA09_MST.DPTNO, SCA09_MST.EPNO
	</select>
	
	<!-- 매출내역 종합현황(상세현황) 조회 -->
	<select id = "sfa05_list1" parameterType="hashmap" resultType="hashmap">
		SELECT  A.COMPANY,
			        A.PLANT,
			        A.JUPO1,
			        A.JUPO2,
			        A.SEQ,
			        A.DPTNO,    
			        A.ITGRP,    
			        A.ORDNO PJTNO,
			        TO_CHAR(A.JDATA, 'YYYY-MM-DD') JDATA,
			        B.PJTNM,
			        NVL(B.PJAMT,0) PJAMT,
			        NVL(B.MAAMT,0) MAAMT,     
			        NVL(B.SUAMT,0) SUAMT,     
			        A.GLITN GRITN,
			        A.ITNBR,
			        B.CVCOD,
			        A.EMPNO,
			        NVL(A.TRCTY,0) QTY2,
			        NVL(A.PRAMT,0) AMT2,
			        NVL(A.TAVAT,0) VAT
		FROM SCA09_MST B, SFA03_MST A
		WHERE A.COMPANY = #{company_cd}
		AND A.PLANT = #{plant_cd}
		AND A.GUBUN = '20'
		<if test = "date_fr != null and date_fr != '' and date_to != null and date_to != ''">
			AND A.JDATA BETWEEN REPLACE(substr(#{date_fr}, 1, 10), '-', '') AND REPLACE(substr(#{date_to}, 1, 10), '-', '')
		</if>
		<if test = "dptno != null and dptno != ''">
			AND A.DPTNO LIKE #{dptno} || '%'
		</if>
		AND B.COMPANY = A.COMPANY
		AND B.PLANT = A.PLANT
		AND B.PJTNO = A.ORDNO
		<if test = "cust_cd != null and cust_cd != ''">
			AND B.CVCOD LIKE #{cust_cd} || '%'
		</if>
		ORDER BY substr(A.ORDNO,3,6), B.CVCOD, A.JDATA, A.JUPO1, A.JUPO2
	</select>
	
	<!-- 매출내역 종합현황(거래처별) 조회 -->
	<select id = "sfa05_list2" parameterType="hashmap" resultType="hashmap">
		SELECT  CVCOD, 
			        SUM(QTY2) QTY2, 
			        SUM(AMT2) AMT2, 
			        SUM(VAT) VAT,
			        SUM(TOTAMT) TOTAMT
		FROM (SELECT    B.CVCOD,    
		                A.ITGRP,    
		                A.ORDNO PJTNO,    
		                B.PJTNM,   
		                A.GLITN GRITN,
		                SUM(NVL(A.TRCTY,0)) QTY2,
		                SUM(NVL(A.PRAMT,0)) AMT2,
		                SUM(NVL(A.TAVAT,0)) VAT,
		                (SUM(NVL(A.PRAMT,0))+ SUM(NVL(A.TAVAT,0))) TOTAMT
		        FROM SCA09_MST B, SFA03_MST A
		        WHERE A.COMPANY = #{company_cd}
		        AND A.PLANT = #{plant_cd}
		        AND A.GUBUN = '20'
		        <if test = "date_fr != null and date_fr != '' and date_to != null and date_to != ''">
		        	AND A.JDATA BETWEEN REPLACE(substr(#{date_fr}, 1, 10), '-', '') AND REPLACE(substr(#{date_to}, 1, 10), '-', '')
		        </if>
		        <if test = "dptno != null and dptno != ''">
		        AND A.DPTNO LIKE #{dptno} || '%'
		        </if>
		        AND B.COMPANY = A.COMPANY
		        AND B.PLANT = A.PLANT
		        AND B.PJTNO = A.ORDNO
		        <if test = "cust_cd != null and cust_cd != ''">
		        AND B.CVCOD LIKE #{cust_cd} || '%'
		        </if>
		        GROUP BY B.CVCOD, A.ITGRP, A.ORDNO, B.PJTNM, A.GLITN    )
		GROUP BY CVCOD
		ORDER BY CVCOD
	</select>
	
	<!-- 매출내역 종합현황(부서별) 조회 -->
	<select id = "sfa05_list3" parameterType="hashmap" resultType="hashmap">
		SELECT  A.DPTNO,    
			        A.EMPNO,    
			        SUM(NVL(A.TRCTY,0)) QTY2,
			        SUM(NVL(A.PRAMT,0)) AMT2,
			        SUM(NVL(A.TAVAT,0)) VAT,
			        (SUM(NVL(A.PRAMT,0)) + SUM(NVL(A.TAVAT,0))) TOTAMT
		FROM SCA09_MST B, SFA03_MST A
		WHERE A.COMPANY = #{company_cd}
		AND A.PLANT = #{plant_cd}
		AND A.GUBUN = '20'
		<if test = "date_fr != null and date_fr != '' and date_to != null and date_to != ''">
			AND A.JDATA BETWEEN REPLACE(substr(#{date_fr}, 1, 10), '-', '') AND REPLACE(substr(#{date_to}, 1, 10), '-', '')
		</if>
		<if test = "dptno != null and dptno != ''">
			AND A.DPTNO LIKE #{dptno} || '%'
		</if>
			AND B.COMPANY = A.COMPANY
		AND B.PLANT = A.PLANT
		AND B.PJTNO = A.ORDNO
		<if test = "cust_cd != null and cust_cd != ''">
			AND B.CVCOD LIKE #{cust_cd} || '%'
		</if>
		GROUP BY A.DPTNO, A.EMPNO
		ORDER BY A.DPTNO, A.EMPNO
	</select>
	
	<!-- 수금내역 종합현황(상세현황) 조회 -->
	<select id = "shb04_list1" parameterType="hashmap" resultType="hashmap">
		SELECT  A.COMPANY,
			        A.PLANT,
			        A.JUPO1,
			        A.JUPO2,
			        A.SEQ,
			        A.DPTNO,    
			        A.ITGRP,    
			        A.ORDNO PJTNO,
			        TO_CHAR(A.JDATA, 'YYYY-MM-DD') JDATA,
			        B.PJTNM,
			        NVL(B.PJAMT,0) PJAMT,
			        NVL(B.MAAMT,0) MAAMT,     
			        NVL(B.SUAMT,0) SUAMT,     
			        A.GLITN GRITN,
			        A.ITNBR,
			        B.CVCOD,
			        A.EMPNO,
			        NVL(A.TRCTY,0) QTY2,
			        NVL(A.PRAMT,0) AMT2,
			        NVL(A.TAVAT,0) VAT,
			        A.TRGBN,
			        A.TRCAS,
			        A.AMTNO,
			        TO_CHAR(A.TRTAT, 'YYYY-MM-DD') TRTAT,
			        TO_CHAR(A.MADAT, 'YYYY-MM-DD') MADAT,
			        A.JIOUT,
			        A.BALIN
		FROM SCA09_MST B, SFA03_MST A
		WHERE A.COMPANY = #{company_cd}
		AND A.PLANT = #{plant_cd}
		AND A.GUBUN = '30'
		<if test = "date_fr != null and date_fr != '' and date_to != null and date_to != ''">
			AND A.JDATA BETWEEN REPLACE(substr(#{date_fr}, 1, 10), '-', '') AND REPLACE(substr(#{date_to}, 1, 10), '-', '')
		</if>
		<if test = "dptno != null and dptno != ''">
			AND A.DPTNO LIKE #{dptno} || '%'
		</if>
		AND B.COMPANY = A.COMPANY
		AND B.PLANT = A.PLANT
		AND B.PJTNO = A.ORDNO
		<if test = "cust_cd != null and cust_cd != ''">
			AND B.CVCOD LIKE #{cust_cd} || '%'
		</if>
		ORDER BY substr(A.ORDNO,3,6), B.CVCOD, A.JDATA, A.JUPO1, A.JUPO2, A.SEQ
	</select>
	
	<!-- 수금내역 종합현황(거래처별) 조회 -->
	<select id = "shb04_list2" parameterType="hashmap" resultType="hashmap">
		SELECT  B.CVCOD,
			        B.CVCOD CVCOD_NM,
			        SUM(NVL(DECODE(A.TRCAS, 'B2', 0, NVL(A.PRAMT,0)),0)) CASH_AMT,
			        SUM(NVL(DECODE(A.TRCAS, 'B2', NVL(A.PRAMT,0), 0),0)) BILL_AMT,
			        SUM(NVL(A.TAVAT,0)) VAT
		FROM SCA09_MST B, SFA03_MST A
		
		WHERE A.COMPANY = #{company_cd}
		AND A.PLANT = #{plant_cd}
		AND A.GUBUN = '30'
		<if test = "date_fr != null and date_fr != '' and date_to != null and date_to != ''">
			AND A.JDATA BETWEEN REPLACE(substr(#{date_fr}, 1, 10), '-', '') AND REPLACE(substr(#{date_to}, 1, 10), '-', '')
		</if>
		<if test = "dptno != null and dptno != ''">
			AND A.DPTNO LIKE #{dptno} || '%'   
		</if>
		AND B.COMPANY = A.COMPANY
		AND B.PLANT = A.PLANT
		AND B.PJTNO = A.ORDNO
		<if test = "cust_cd != null and cust_cd != ''">
			AND B.CVCOD LIKE #{cust_cd} || '%'
		</if>
		GROUP BY B.CVCOD
	</select>
	
	<!-- 수금내역 종합현황(부서별) 조회 -->
	<select id = "shb04_list3" parameterType="hashmap" resultType="hashmap">
		SELECT  A.DPTNO,
			        A.DPTNO DPTNM,
			        A.EMPNO,
			        SUM(NVL(DECODE(A.TRCAS, 'B2', 0, NVL(A.PRAMT,0)),0)) CASH_AMT,
			        SUM(NVL(DECODE(A.TRCAS, 'B2', NVL(A.PRAMT,0), 0),0)) BILL_AMT,
			        SUM(NVL(A.TAVAT,0)) VAT
		FROM SCA09_MST B, SFA03_MST A
		WHERE A.COMPANY = #{company_cd}
		AND A.PLANT = #{plant_cd}
		AND A.GUBUN = '30'
		<if test = "date_fr != null and date_fr != '' and date_to != null and date_to != ''">
			AND A.JDATA BETWEEN REPLACE(substr(#{date_fr}, 1, 10), '-', '') AND REPLACE(substr(#{date_to}, 1, 10), '-', '')
		</if>
		<if test = "dptno != null and dptno != ''">
			AND A.DPTNO LIKE #{dptno} || '%'   
		</if>
		AND B.COMPANY = A.COMPANY
		AND B.PLANT = A.PLANT
		AND B.PJTNO = A.ORDNO
		<if test = "cust_cd != null and cust_cd != ''">
			AND B.CVCOD LIKE #{cust_cd} || '%'
		</if>
		GROUP BY A.DPTNO, A.EMPNO
	</select>
	
	<!-- 목표기초원가 발행(자재투입 계획서(갑지)) -->
	<select id = "pdh04_list1" parameterType="hashmap" resultType="hashmap">
		SELECT  A.COMPANY,
			        A.PLANT,
			        A.PJTNO,
			        PROD.SF_PJTNO_DATA(A.COMPANY, A.PLANT, A.PJTNO, '1') PJTNM,
			        A.CUST,
			        PROD.SF_BUYER_NM(A.CUST) CUST_NM,
			        A.ITEM,
			        PROD.SF_ITNBR_NM(A.COMPANY, A.ITEM, '2') ITEM_NM,
			        NVL(A.ORDER_QTY,0) ORDER_QTY,
			        NVL(A.ORDER_AMT,0) ORDER_AMT,
			        TO_CHAR(A.ORDER_DATE, 'YYYY-MM-DD') ORDER_DATE,
			        TO_CHAR(A.DUE_DATE, 'YYYY-MM-DD') DUE_DATE,
			        /*구매목표예산 정보 */
			        NVL(A.TOTAL_AMT,0) TOTAL_AMT,
			        NVL(A.LASTTOTAL_AMT,0) LASTTOTAL_AMT,
			        NVL(A.PUR_AMT,0) PUR_AMT,
			        NVL(A.OUT_AMT,0) OUT_AMT,
			        NVL(A.B_STAND_AMT,0) BUD_B_STAND_AMT,
			        NVL(A.E_STAND_AMT,0) BUD_E_STAND_AMT,
			        NVL(A.B_PROC_AMT,0) BUD_B_PROC_AMT,
			        NVL(A.E_PROC_AMT,0) BUD_E_PROC_AMT,
			        NVL(A.B_MAKE_AMT,0) BUD_B_MAKE_AMT,
			        NVL(A.E_MAKE_AMT,0) BUD_E_MAKE_AMT,
			        NVL(A.B_PAY_AMT,0) BUD_B_PAY_AMT,
			        NVL(A.E_PAY_AMT,0) BUD_E_PAY_AMT,
			        NVL(A.B_SUP_AMT,0) BUD_B_SUP_AMT,
			        NVL(A.E_SUP_AMT,0) BUD_E_SUP_AMT,
			        NVL(A.TRIP_AMT,0) BUD_TRIP_AMT,
			        NVL(A.PACK_AMT,0) BUD_PACK_AMT,
			        /*정상발주 내역 */
			        NVL(B.TOTAL_AMT,0) PUR_TOTAL_AMT,
			        NVL(B.B_STAND_AMT,0) PUR_B_STAND_AMT,
			        NVL(B.E_STAND_AMT,0) PUR_E_STAND_AMT,
			        NVL(B.B_PROC_AMT,0) PUR_B_PROC_AMT,
			        NVL(B.E_PROC_AMT,0) PUR_E_PROC_AMT,
			        NVL(B.B_MAKE_AMT,0) PUR_B_MAKE_AMT,
			        NVL(B.E_MAKE_AMT,0) PUR_E_MAKE_AMT,
			        NVL(B.B_PAY_AMT,0) PUR_B_PAY_AMT,
			        NVL(B.E_PAY_AMT,0) PUR_E_PAY_AMT,
			        NVL(B.B_SUP_AMT,0) PUR_B_SUP_AMT,
			        NVL(B.E_SUP_AMT,0) PUR_E_SUP_AMT,
			        0 PUR_TRIP_AMT,
			        0 PUR_PACK_AMT,
			        /*정상출고 내역*/
			        NVL(C.TOTAL_AMT,0) OUT_TOTAL_AMT,
			        NVL(C.B_STAND_AMT,0) OUT_B_STAND_AMT,
			        NVL(C.E_STAND_AMT,0) OUT_E_STAND_AMT,
			        NVL(C.B_PROC_AMT,0) OUT_B_PROC_AMT,
			        NVL(C.E_PROC_AMT,0) OUT_E_PROC_AMT,
			        NVL(C.B_MAKE_AMT,0) OUT_B_MAKE_AMT,
			        NVL(C.E_MAKE_AMT,0) OUT_E_MAKE_AMT,
			        NVL(C.B_PAY_AMT,0) OUT_B_PAY_AMT,
			        NVL(C.E_PAY_AMT,0) OUT_E_PAY_AMT,
			        NVL(C.B_SUP_AMT,0) OUT_B_SUP_AMT,
			        NVL(C.E_SUP_AMT,0) OUT_E_SUP_AMT,
			        0 OUT_TRIP_AMT,
			        0 OUT_PACK_AMT,
			        /*추가발주 내역 */
			        NVL(D.TOTAL_AMT,0) ADD_PUR_TOTAL_AMT,
			        NVL(D.B_STAND_AMT,0) + NVL(F.B_STAND_ALLO_AMT,0) ADD_PUR_B_STAND_AMT,
			        NVL(D.E_STAND_AMT,0) + NVL(F.E_STAND_ALLO_AMT,0) ADD_PUR_E_STAND_AMT,
			        NVL(D.B_PROC_AMT,0) + NVL(F.B_PROC_ALLO_AMT,0) ADD_PUR_B_PROC_AMT,
			        NVL(D.E_PROC_AMT,0) + NVL(F.E_PROC_ALLO_AMT,0) ADD_PUR_E_PROC_AMT,
			        NVL(D.B_MAKE_AMT,0) + NVL(F.B_MAKE_ALLO_AMT,0) ADD_PUR_B_MAKE_AMT,
			        NVL(D.E_MAKE_AMT,0) + NVL(F.E_MAKE_ALLO_AMT,0) ADD_PUR_E_MAKE_AMT,
			        NVL(D.B_PAY_AMT,0) + NVL(F.B_PAY_ALLO_AMT,0) ADD_PUR_B_PAY_AMT,
			        NVL(D.E_PAY_AMT,0) + NVL(F.E_PAY_ALLO_AMT,0) ADD_PUR_E_PAY_AMT,
			        NVL(D.B_SUP_AMT,0) + NVL(F.B_SUP_ALLO_AMT,0) ADD_PUR_B_SUP_AMT,
			        NVL(D.E_SUP_AMT,0) + NVL(F.E_SUP_ALLO_AMT,0) ADD_PUR_E_SUP_AMT,
			        0 ADD_PUR_TRIP_AMT,
			        0 ADD_PUR_PACK_AMT, 
			        /*추가출고 내역*/
			        NVL(E.TOTAL_AMT,0) ADD_OUT_TOTAL_AMT,
			        NVL(E.B_STAND_AMT,0) ADD_OUT_B_STAND_AMT,
			        NVL(E.E_STAND_AMT,0) ADD_OUT_E_STAND_AMT,
			        NVL(E.B_PROC_AMT,0) ADD_OUT_B_PROC_AMT,
			        NVL(E.E_PROC_AMT,0) ADD_OUT_E_PROC_AMT,
			        NVL(E.B_MAKE_AMT,0) ADD_OUT_B_MAKE_AMT,
			        NVL(E.E_MAKE_AMT,0) ADD_OUT_E_MAKE_AMT,
			        NVL(E.B_PAY_AMT,0) ADD_OUT_B_PAY_AMT,
			        NVL(E.E_PAY_AMT,0) ADD_OUT_E_PAY_AMT,
			        NVL(E.B_SUP_AMT,0) ADD_OUT_B_SUP_AMT,
			        NVL(E.E_SUP_AMT,0) ADD_OUT_E_SUP_AMT,
			        0 ADD_OUT_TRIP_AMT,
			        0 ADD_OUT_PACK_AMT,
			        (SELECT NVL(SUM(NVL(QTYPR,0) * NVL(STD_PRICE,0)),0)    
			         FROM PROD.PDH02_TBL
			         WHERE COMPANY = A.COMPANY
			         AND PLANT = A.PLANT
			         AND PJTNO = A.PJTNO) PROD_EXP_AMT,
			        TO_CHAR(A.FIX_DATE, 'YYYY-MM-DD') PLAN_MK_DATE, 
			        (SELECT nvl(SUM(NVL(allo_qty,0) * NVL(pur_price,0)),0)    
			         FROM pda04_dtl 
			         WHERE company = A.company 
			         AND plant = A.plant
			         AND pdtno = a.pjtno 
			         AND NVL(ALLO_QTY,0) <![CDATA[ <> ]]> 0
			        ) ALLO_AMT   
		FROM 	PROD.PDH01_MST A, /*구매목표마스타*/
					PROD.PDH01_VIW01 B, /*정상발주*/
					PROD.PDH01_VIW02 C, /*정상출고*/
					PROD.PDH01_VIW03 D, /*추가발주*/
					PROD.PDH01_VIW04 E, /*추가출고*/
					PROD.PDH01_VIW05 F /*할당사용*/
		WHERE A.COMPANY = #{company_cd}
		AND A.PLANT = #{plant_cd}
		<if test = "pjtno_fr != null and pjtno_fr != '' and pjtno_to != null and pjtno_to != ''">
			AND SUBSTR(A.PJTNO,3,6) BETWEEN SUBSTR(#{pjtno_fr},3,6) AND SUBSTR(#{pjtno_to},3,6)
		</if>
		<if test = "pjtno_fr != null and pjtno_fr != ''">
			AND A.PJTNO = #{pjtno_fr}
		</if>
		AND A.COMPANY = B.COMPANY(+)    
		AND A.PLANT = B.PLANT(+)        
		AND A.PJTNO = B.PJTNO(+)
		AND A.COMPANY = C.COMPANY(+)    
		AND A.PLANT = C.PLANT(+)        
		AND A.PJTNO = C.PJTNO(+)
		AND A.COMPANY = D.COMPANY(+)    
		AND A.PLANT = D.PLANT(+)        
		AND A.PJTNO = D.PJTNO(+)
		AND A.COMPANY = E.COMPANY(+)    
		AND A.PLANT = E.PLANT(+)        
		AND A.PJTNO = E.PJTNO(+)
		AND A.COMPANY = F.COMPANY(+)    
		AND A.PLANT = F.PLANT(+)        
		AND A.PJTNO = F.PJTNO(+)
		AND NVL(A.STATUS,'XX') = '90'
	</select>
	
	<!-- 목표기초원가 발행(자재투입 계획서(을지)) -->
	<select id = "pdh04_list2" parameterType="hashmap" resultType="hashmap">
		SELECT  B.COMPANY,    
			        B.PLANT,
			        B.PJTNO,
			        D.PJTNM,
			        D.CVCOD,
			        B.ITEM,
			        C.NAME,
			        C.SPEC1,
			        C.UNMSR,
			        B.OBJ_PRICE, 
			        B.STD_PRICE, 
			        B.PUR_PRICE, 
			        B.BUD_QTY,
			        B.BUD_AMT,
			        B.PL_QTY,
			        B.PL_AMT,
			        B.PUR_QTY,
			        B.PUR_AMT
		FROM( SELECT    A.COMPANY,    
				                A.PLANT,
				                A.PJTNO,
				                A.ITEM,
				                MAX(A.OBJ_PRICE) OBJ_PRICE    , 
				                MAX(A.STD_PRICE) STD_PRICE    , 
				                MAX(A.PUR_PRICE) PUR_PRICE    , 
				                SUM(A.BUD_QTY) BUD_QTY    ,    
				                SUM(A.BUD_AMT) BUD_AMT    , 
				                SUM(A.PL_QTY) PL_QTY        , 
				                SUM(A.PL_AMT) PL_AMT        , 
				                SUM(A.PUR_QTY) PUR_QTY    , 
				                SUM(A.PUR_AMT) PUR_AMT
		        FROM (
		                SELECT  K.COMPANY,    
			                        K.PLANT,
			                        K.PJTNO,
			                        K.CINBR ITEM,
			                        NVL(K.OBJ_PRICE,0) OBJ_PRICE,
			                        NVL(SUM(NVL(K.QTYPR,0)),0) BUD_QTY,    
			                        NVL(SUM(NVL(K.QTYPR,0) * NVL(OBJ_PRICE,0)),0) BUD_AMT,
			                        0 STD_PRICE,
			                        0 PL_QTY,
			                        0 PL_AMT,
			                        0 PUR_PRICE,
			                        0 PUR_QTY,
			                        0 PUR_AMT
		                FROM PROD.PDH02_TBL K, PROD.PDH01_MST L
		                WHERE K.COMPANY = L.COMPANY
		                AND K.PLANT = L.PLANT
		                AND K.PJTNO = L.PJTNO
		                AND K.COMPANY = #{company_cd}
		                AND K.PLANT = #{plant_cd}
		                <if test = "pjtno_fr != null and pjtno_fr != '' and pjtno_to != null and pjtno_to != ''">
		                	AND SUBSTR(K.PJTNO,3,6) BETWEEN SUBSTR(#{pjtno_fr},3,6) AND SUBSTR(#{pjtno_to},3,6)
		                </if>
		                AND NVL(L.STATUS,'XX') = '90'
		                GROUP BY K.COMPANY, K.PLANT, K.PJTNO, K.CINBR, NVL(K.OBJ_PRICE,0)
		        UNION ALL
		        SELECT  K.COMPANY,
			                K.PLANT,
			                K.PDTNO PJTNO,
			                K.CINBR ITEM,
			                0 OBJ_PRICE,
			                0 BUD_QTY,
			                0 BUD_AMT,
			                NVL(L.STD_PRICE,0) STD_PRICE,
			                NVL(SUM(NVL(K.QTYPR,0)),0) PL_QTY,
			                NVL(SUM(NVL(K.QTYPR,0) * NVL(L.STD_PRICE,0)),0) PL_AMT,
			                0 PUR_PRICE,
			                0 PUR_QTY,
			                0 PUR_AMT
		        FROM PROD.PAE03_MST K, PROD.PAE03_HIS J, PROD.PAD01_MST L
		        WHERE K.COMPANY = #{company_cd}
		        AND K.PLANT = #{plant_cd}
		        <if test = "pjtno_fr != null and pjtno_fr != '' and pjtno_to != null and pjtno_to != ''">
		        	AND SUBSTR(K.PDTNO,3,6)    BETWEEN    SUBSTR(#{pjtno_fr},3,6) AND SUBSTR(#{pjtno_to},3,6)
		        </if>
		        AND K.COMPANY = J.COMPANY
		        AND K.PLANT = J.PLANT
		        AND K.PDTNO = J.PDTNO
		        AND K.DRSEQ = J.DRSEQ
		        AND J.CONF_DATE IS NOT NULL
		        AND K.COMPANY = L.COMPANY(+)
		        AND K.CINBR = L.ITNBR(+)
		        GROUP BY K.COMPANY, K.PLANT, K.PDTNO, K.CINBR, NVL(L.STD_PRICE,0)
		        UNION ALL
		        SELECT  TB.COMPANY,
			                TB.PLANT,
			                TB.PDTNO PJTNO,
			                TB.ITEM,
			                0 OBJ_PRICE,
			                0 BUD_QTY,    
			                0 BUD_AMT,
			                0 STD_PRICE,
			                0 PL_QTY,
			                0 PL_AMT,
			                NVL(TB.PUR_PRICE,0) PUR_PRICE,
			                NVL(SUM(NVL(TB.PUR_QTY,0) - NVL(TB.CNCL_QTY,0)),0) PUR_QTY,
			                NVL(SUM((NVL(TB.PUR_QTY,0) - NVL(TB.CNCL_QTY,0)) * NVL(TB.PUR_PRICE,0)),0) PUR_AMT
		        FROM PROD.PDA04_MST TA, PROD.PDA04_DTL TB 
		        WHERE TA.COMPANY = #{company_cd}
		        AND TA.PLANT = #{plant_cd} 
		        <if test = "pjtno_fr != null and pjtno_fr and pjtno_to != null and pjtno_to != ''">
		        	AND SUBSTR(TA.PDTNO,3,6)    BETWEEN    SUBSTR(#{pjtno_fr},3,6) AND SUBSTR(#{pjtno_to},3,6)
		        </if>
		        AND TA.COMPANY = TB.COMPANY
		        AND TA.PLANT = TB.PLANT
		        AND TA.PDTNO = TB.PDTNO
		        AND TA.DRSEQ = TB.DRSEQ 
		        AND TA.PUR_NO = TB.PUR_NO
		        AND NVL(TB.PUR_QTY,0) - NVL(TB.CNCL_QTY,0) != 0
		        GROUP BY TB.COMPANY, TB.PLANT, TB.PDTNO, TB.ITEM, NVL(TB.PUR_PRICE,0)  
		        ) A
		        GROUP BY A.COMPANY, A.PLANT, A.PJTNO, A.ITEM
		    ) B,
		    SALE.SAB01_MST C,
		    SALE.SCA09_MST D
		WHERE B.COMPANY = D.COMPANY(+)
		AND B.PLANT = D.PLANT(+)
		AND B.PJTNO = D.PJTNO(+)
		AND B.COMPANY = C.COMPANY(+)
		AND B.ITEM = C.ITNBR(+)
		<if test = "pjtno_fr != null and pjtno_fr != ''">
			AND B.PJTNO = #{pjtno_fr}
		</if>
		ORDER BY B.COMPANY, B.PLANT, B.PJTNO, B.ITEM
	</select>
	
	<!-- 월말요약보고서 -->
	<select id = "pdd02_list" parameterType="hashmap" resultType="hashmap">
		SELECT  K.COMPANY                    COMPANY        ,
                    K.PLANT                    PLANT            ,
                    K.GUBUN                    GUBUN            ,
                    SUM(K.PUR_AMT)            PUR_AMT        ,
                    SUM(K.ALLO_AMT)            ALLO_AMT        ,
                    LPAD((select substr(#{yymm},0,4) || '01' from dual),6)        CUR_YYMM_FR    ,
                    LPAD(substr(REPLACE(#{yymm},'-',''),0,6),6)    CUR_YYMM_TO    ,
                    TRIM(TO_CHAR(TO_NUMBER(SUBSTR(LPAD((select substr(#{yymm},0,4) || '01' from dual),6),1,4)) - 1,'0000'))    BEF_YYYY,
                    SUBSTR(K.GUBUN,1,1)            GUBUN_GR
            FROM    (
                        SELECT    A.COMPANY             COMPANY    ,
                                A.PLANT            PLANT        ,
                                'A1'                    GUBUN        ,
                                NVL(SUM((NVL(A.PUR_QTY,0) - NVL(A.CNCL_QTY,0)) * NVL(A.PUR_PRICE,0)),0)    PUR_AMT    ,
                                NVL(SUM(NVL(A.ALLO_QTY,0) * NVL(A.PUR_PRICE,0)),0)                            ALLO_AMT
                        FROM     PROD.PDA04_DTL    A,
                                PROD.PDA04_MST    C
                        WHERE    A.COMPANY    =    C.COMPANY 
                        AND    A.PLANT        =    C.PLANT   
                        AND    A.PDTNO        =    C.PDTNO   
                        AND    A.DRSEQ        =    C.DRSEQ  
                        AND    A.PUR_NO        =    C.PUR_NO
                        AND    SUBSTR(A.PDTNO,2,1)  <![CDATA[ <> ]]>  'T'
                        AND    (    (A.DRSEQ    BETWEEN    '100' AND '189')    OR
                                    (A.DRSEQ    BETWEEN    '190' AND '199')    OR
                                    (A.DRSEQ    BETWEEN    '200' AND '249') )
                        AND    (    ( NVL(A.PUR_QTY,0) - NVL(A.CNCL_QTY,0)  <![CDATA[ <> ]]>  0) OR 
                                    ( NVL(A.ALLO_QTY,0)  <![CDATA[ <> ]]>  0)    )
                        AND    NVL(A.PR_STAT,'X')  <![CDATA[ <> ]]>  'C'
                        AND    TO_CHAR(C.PUR_DATE,'YYYYMMDD')  <![CDATA[ >= ]]>  (SELECT to_char(add_months(to_date(SUBSTR(REPLACE(#{yymm}, '-', ''),0,6) || '01','yyyymmdd'),-1),'yyyymm') || PROD.SF_CODE_TOT('P','P801','S','3') FROM Dual)
                        AND    TO_CHAR(C.PUR_DATE,'YYYYMMDD')  <![CDATA[ <= ]]>  (SELECT SUBSTR(REPLACE(#{yymm}, '-', ''),0,6) || PROD.SF_CODE_TOT('P','P801','E','3') FROM DUAL)
                        GROUP BY A.COMPANY, A.PLANT, 'A1'
                        UNION ALL
                        SELECT    A.COMPANY             COMPANY    ,
                                A.PLANT            PLANT        ,
                                'B1'                    GUBUN        ,
                                NVL(SUM((NVL(A.PUR_QTY,0) - NVL(A.CNCL_QTY,0)) * NVL(A.PUR_PRICE,0)),0)    PUR_AMT    ,
                                NVL(SUM(NVL(A.ALLO_QTY,0) * NVL(A.PUR_PRICE,0)),0)                            ALLO_AMT
                        FROM     PROD.PDA04_DTL    A,
                                PROD.PDA04_MST    C
                        WHERE    A.COMPANY    =    C.COMPANY 
                        AND    A.PLANT        =    C.PLANT   
                        AND    A.PDTNO        =    C.PDTNO   
                        AND    A.DRSEQ        =    C.DRSEQ  
                        AND    A.PUR_NO    =    C.PUR_NO
                        AND    SUBSTR(A.PDTNO,2,1)  <![CDATA[ <> ]]>  'T'
                        AND    (    (A.DRSEQ    BETWEEN    '100' AND '189')    OR
                                    (A.DRSEQ    BETWEEN    '190' AND '199')    OR
                                    (A.DRSEQ    BETWEEN    '200' AND '249') )
                        AND    (    ( NVL(A.PUR_QTY,0) - NVL(A.CNCL_QTY,0)  <![CDATA[ <> ]]>  0) OR 
                                    ( NVL(A.ALLO_QTY,0)  <![CDATA[ <> ]]>  0)    )
                        AND    NVL(A.PR_STAT,'X')  <![CDATA[ <> ]]>  'C'
                        AND    TO_CHAR(C.PUR_DATE,'YYYYMMDD')  <![CDATA[ >= ]]>  TO_CHAR(ADD_MONTHS(TO_DATE((select substr(#{yymm},0,4) || '01' from dual) || '01','YYYYMMDD'),-1),'YYYYMM')  ||  PROD.SF_CODE_TOT('P','P801','S','3')
                        AND    TO_CHAR(C.PUR_DATE,'YYYYMMDD')  <![CDATA[ <= ]]>  (SELECT SUBSTR(REPLACE(#{yymm}, '-', ''),0,6) || PROD.SF_CODE_TOT('P','P801','E','3') FROM DUAL)
                        GROUP BY A.COMPANY, A.PLANT, 'B1'
                        UNION ALL
                        SELECT    A.COMPANY                 COMPANY    ,
                                A.PLANT                PLANT        ,
                                'B2'                        GUBUN        ,
                                NVL(SUM((NVL(A.PUR_QTY,0) - NVL(A.CNCL_QTY,0)) * NVL(A.PUR_PRICE,0)),0)    PUR_AMT    ,
                                NVL(SUM(NVL(A.ALLO_QTY,0) * NVL(A.PUR_PRICE,0)),0)                            ALLO_AMT
                        FROM     PROD.PDA04_DTL    A,
                                PROD.PDA04_MST    C,
                                SALE.SCA09_MST    B
                        WHERE    A.COMPANY        =    C.COMPANY 
                        AND    A.PLANT        =    C.PLANT   
                        AND    A.PDTNO        =    C.PDTNO   
                        AND    A.DRSEQ        =    C.DRSEQ  
                        AND    A.PUR_NO        =    C.PUR_NO
                        AND    A.COMPANY        =    B.COMPANY 
                        AND    A.PLANT        =    B.PLANT   
                        AND    A.PDTNO        =    B.PJTNO
                        AND    SUBSTR(A.PDTNO,2,1) = 'T'
                        AND    B.ONDOM          <![CDATA[ <> ]]>     '5'
                        AND    (    (A.DRSEQ    BETWEEN    '100' AND '189')    OR
                                    (A.DRSEQ    BETWEEN    '190' AND '199')    OR
                                    (A.DRSEQ    BETWEEN    '200' AND '249') )
                        AND    (    ( NVL(A.PUR_QTY,0) - NVL(A.CNCL_QTY,0)  <![CDATA[ <> ]]>  0) OR 
                                    ( NVL(A.ALLO_QTY,0)  <![CDATA[ <> ]]>  0)    )
                        AND    NVL(A.PR_STAT,'X')  <![CDATA[ <> ]]>  'C'
                        AND    TO_CHAR(C.PUR_DATE,'YYYYMMDD')  <![CDATA[ >= ]]>  TO_CHAR(ADD_MONTHS(TO_DATE((select substr(#{yymm},0,4) || '01' from dual) || '01','YYYYMMDD'),-1),'YYYYMM')  ||  PROD.SF_CODE_TOT('P','P801','S','3') 
                        AND    TO_CHAR(C.PUR_DATE,'YYYYMMDD')  <![CDATA[ <= ]]>  (SELECT SUBSTR(REPLACE(#{yymm}, '-', ''),0,6) || PROD.SF_CODE_TOT('P','P801','E','3') FROM DUAL)
                        GROUP BY A.COMPANY, A.PLANT, 'B2'
                        UNION ALL
                        SELECT    A.COMPANY                 COMPANY    ,
                                A.PLANT                PLANT        ,
                                'C1'                        GUBUN        ,
                                NVL(SUM((NVL(A.PUR_QTY,0) - NVL(A.CNCL_QTY,0)) * NVL(A.PUR_PRICE,0)),0)    PUR_AMT    ,
                                NVL(SUM(NVL(A.ALLO_QTY,0) * NVL(A.PUR_PRICE,0)),0)                            ALLO_AMT
                        FROM     PROD.PDA04_DTL    A,
                                PROD.PDA04_MST    C,
                                SALE.SCA09_MST    B
                        WHERE    A.COMPANY        =    C.COMPANY 
                        AND    A.PLANT        =    C.PLANT   
                        AND    A.PDTNO        =    C.PDTNO   
                        AND    A.DRSEQ        =    C.DRSEQ  
                        AND    A.PUR_NO        =    C.PUR_NO
                        AND    A.COMPANY        =    B.COMPANY 
                        AND    A.PLANT        =    B.PLANT   
                        AND    A.PDTNO        =    B.PJTNO
                        AND    ( SUBSTR(B.PJTNO,2,1)  <![CDATA[ <> ]]>  'T' OR B.ONDOM  <![CDATA[ <> ]]>  '5' )
                        AND    (    (A.DRSEQ    BETWEEN    '300' AND '399') OR 
                                    (A.DRSEQ    BETWEEN    '250' AND '299')    )
                        AND    (    ( NVL(A.PUR_QTY,0) - NVL(A.CNCL_QTY,0)  <![CDATA[ <> ]]>  0) OR 
                                    ( NVL(A.ALLO_QTY,0)  <![CDATA[ <> ]]>  0)    )
                        AND    NVL(A.PR_STAT,'X')  <![CDATA[ <> ]]>  'C'
                        AND    TO_CHAR(C.PUR_DATE,'YYYYMMDD')  <![CDATA[ >= ]]>  (SELECT to_char(add_months(to_date(SUBSTR(REPLACE(#{yymm}, '-', ''),0,6) || '01','yyyymmdd'),-1),'yyyymm') || PROD.SF_CODE_TOT('P','P801','S','3') FROM Dual)
                        AND    TO_CHAR(C.PUR_DATE,'YYYYMMDD')  <![CDATA[ <= ]]>  (SELECT SUBSTR(REPLACE(#{yymm}, '-', ''),0,6) || PROD.SF_CODE_TOT('P','P801','E','3') FROM DUAL)
                        GROUP BY A.COMPANY, A.PLANT, 'C1'
                        UNION ALL
                        SELECT    A.COMPANY                 COMPANY    ,
                                A.PLANT                PLANT        ,
                                'C2'                        GUBUN        ,
                                NVL(SUM((NVL(A.PUR_QTY,0) - NVL(A.CNCL_QTY,0)) * NVL(A.PUR_PRICE,0)),0)    PUR_AMT    ,
                                NVL(SUM(NVL(A.ALLO_QTY,0) * NVL(A.PUR_PRICE,0)),0)                            ALLO_AMT
                        FROM     PROD.PDA04_DTL    A,
                                PROD.PDA04_MST    C,
                                SALE.SCA09_MST    B
                        WHERE    A.COMPANY        =    C.COMPANY 
                        AND    A.PLANT        =    C.PLANT   
                        AND    A.PDTNO        =    C.PDTNO   
                        AND    A.DRSEQ        =    C.DRSEQ  
                        AND    A.PUR_NO        =    C.PUR_NO
                        AND    A.COMPANY        =    B.COMPANY 
                        AND    A.PLANT        =    B.PLANT   
                        AND    A.PDTNO        =    B.PJTNO
                        AND    ( SUBSTR(B.PJTNO,2,1)  <![CDATA[ <> ]]>  'T' OR B.ONDOM  <![CDATA[ <> ]]>  '5' )
                        AND    (    (A.DRSEQ    BETWEEN    '300' AND '399') OR 
                                    (A.DRSEQ    BETWEEN    '250' AND '299')    )
                        AND    (    ( NVL(A.PUR_QTY,0) - NVL(A.CNCL_QTY,0)  <![CDATA[ <> ]]>  0) OR 
                                    ( NVL(A.ALLO_QTY,0)  <![CDATA[ <> ]]>  0)    )
                        AND    NVL(A.PR_STAT,'X')  <![CDATA[ <> ]]>  'C'
                        AND    TO_CHAR(C.PUR_DATE,'YYYYMMDD')  <![CDATA[ >= ]]>  TO_CHAR(ADD_MONTHS(TO_DATE((select substr(#{yymm},0,4) || '01' from dual) || '01','YYYYMMDD'),-1),'YYYYMM')  ||  PROD.SF_CODE_TOT('P','P801','S','3')
                        AND    TO_CHAR(C.PUR_DATE,'YYYYMMDD')  <![CDATA[ <= ]]>  (SELECT SUBSTR(REPLACE(#{yymm}, '-', ''),0,6) || PROD.SF_CODE_TOT('P','P801','E','3') FROM DUAL)
                        GROUP BY A.COMPANY, A.PLANT, 'C2'
                        UNION ALL
                        SELECT    A.COMPANY            COMPANY    , 
                                A.PLANT            PLANT        ,
                                'D1'                    GUBUN        ,
                                NVL(SUM(NVL(B.TOTAL_AMT,0) + NVL(D.TOTAL_AMT,0)),0)        PUR_AMT    ,
                                NVL(SUM(NVL(E.ALLO_AMT,0)),0)                                ALLO_AMT
                        FROM    SALE.SCA09_MST    A,
                                PROD.PDH01_VIW01        B,
                                PROD.PDH01_VIW03        D,
                                (    SELECT    COMPANY             COMPANY    ,
                                            PLANT                PLANT        ,
                                            PDTNO                PJTNO        ,
                                            NVL(SUM(NVL(ALLO_QTY,0) * NVL(PUR_PRICE,0)),0)        ALLO_AMT
                                    FROM     PROD.PDA04_DTL
                                    WHERE    NVL(ALLO_QTY,0)  <![CDATA[ <> ]]>  0
                                    AND    NVL(PR_STAT,'X')  <![CDATA[ <> ]]>  'C'
                                    GROUP BY COMPANY, PLANT, PDTNO    )    E
                        WHERE    TO_CHAR(A.SODAT,'YYYYMM')    BETWEEN (select substr(#{yymm},0,4) || '01' from dual) AND substr(REPLACE(#{yymm}, '-', ''),0,6)
                        AND    NVL(A.STATUS,'A0')  <![CDATA[ >= ]]>  'B0'
                        AND    SUBSTR(A.PJTNO,2,1)  <![CDATA[ <> ]]>  'T'
                        AND    A.COMPANY        =    B.COMPANY(+)
                        AND    A.PLANT        =    B.PLANT(+)        
                        AND    A.PJTNO        =    B.PJTNO(+)
                        AND    A.COMPANY        =    D.COMPANY(+)    
                        AND    A.PLANT        =    D.PLANT(+)        
                        AND    A.PJTNO        =    D.PJTNO(+)
                        AND    A.COMPANY        =    E.COMPANY(+)    
                        AND    A.PLANT        =    E.PLANT(+)        
                        AND    A.PJTNO        =    E.PJTNO(+)
                        GROUP BY A.COMPANY, A.PLANT, 'D1'
                        UNION ALL
                        SELECT    A.COMPANY            COMPANY    , 
                                A.PLANT            PLANT        ,
                                'D2'                    GUBUN        ,
                                NVL(SUM(NVL(B.TOTAL_AMT,0) + NVL(D.TOTAL_AMT,0)),0)        PUR_AMT    ,
                                NVL(SUM(NVL(E.ALLO_AMT,0)),0)                                ALLO_AMT
                        FROM    SALE.SCA09_MST    A,
                                PROD.PDH01_VIW01        B,
                                PROD.PDH01_VIW03        D,
                                (    SELECT    COMPANY             COMPANY    ,
                                            PLANT                PLANT        ,
                                            PDTNO                PJTNO        ,
                                            NVL(SUM(NVL(ALLO_QTY,0) * NVL(PUR_PRICE,0)),0)        ALLO_AMT
                                    FROM     PROD.PDA04_DTL
                                    WHERE    NVL(ALLO_QTY,0)  <![CDATA[ <> ]]>  0
                                    AND    NVL(PR_STAT,'X')  <![CDATA[ <> ]]>  'C'
                                    GROUP BY COMPANY, PLANT, PDTNO    )    E
                        WHERE    TO_CHAR(A.SODAT,'YYYY')    = TRIM(TO_CHAR(TO_NUMBER(SUBSTR((select substr(#{yymm},0,4) || '01' from dual),1,4)) - 1,'0000'))
                        AND    NVL(A.STATUS,'A0')  <![CDATA[ >= ]]>  'B0'
                        AND    SUBSTR(A.PJTNO,2,1)  <![CDATA[ <> ]]>  'T'
                        AND    A.COMPANY        =    B.COMPANY(+)
                        AND    A.PLANT        =    B.PLANT(+)        
                        AND    A.PJTNO        =    B.PJTNO(+)
                        AND    A.COMPANY        =    D.COMPANY(+)    
                        AND    A.PLANT        =    D.PLANT(+)        
                        AND    A.PJTNO        =    D.PJTNO(+)
                        AND    A.COMPANY        =    E.COMPANY(+)    
                        AND    A.PLANT        =    E.PLANT(+)        
                        AND    A.PJTNO        =    E.PJTNO(+)
                        GROUP BY A.COMPANY, A.PLANT, 'D2'
                        UNION ALL
                        SELECT    A.COMPANY            COMPANY    , 
                                A.PLANT            PLANT        ,
                                'D3'                    GUBUN        ,
                                NVL(SUM(NVL(B.TOTAL_AMT,0) + NVL(D.TOTAL_AMT,0)),0)        PUR_AMT    ,
                                NVL(SUM(NVL(E.ALLO_AMT,0)),0)                                ALLO_AMT
                        FROM    SALE.SCA09_MST    A,
                                PROD.PDH01_VIW01        B,
                                PROD.PDH01_VIW03        D,
                                (    SELECT    COMPANY             COMPANY    ,
                                            PLANT                PLANT        ,
                                            PDTNO                PJTNO        ,
                                            NVL(SUM(NVL(ALLO_QTY,0) * NVL(PUR_PRICE,0)),0)        ALLO_AMT
                                    FROM     PROD.PDA04_DTL
                                    WHERE    NVL(ALLO_QTY,0)  <![CDATA[ <> ]]>  0
                                    AND    NVL(PR_STAT,'X')  <![CDATA[ <> ]]>  'C'
                                    GROUP BY COMPANY, PLANT, PDTNO    )    E
                        WHERE    TO_CHAR(A.SODAT,'YYYYMM') BETWEEN (select substr(#{yymm},0,4) || '01' from dual) AND substr(REPLACE(#{yymm}, '-', ''),0,6)
                        AND        NVL(A.STATUS,'A0')  <![CDATA[ >= ]]>  'B0'
                        AND        SUBSTR(A.PJTNO,2,1) = 'T' 
                        AND        A.ONDOM          <![CDATA[ <> ]]>  '5'
                        AND        A.COMPANY        =    B.COMPANY(+)
                        AND        A.PLANT        =    B.PLANT(+)        
                        AND        A.PJTNO        =    B.PJTNO(+)
                        AND        A.COMPANY        =    D.COMPANY(+)    
                        AND        A.PLANT        =    D.PLANT(+)        
                        AND        A.PJTNO        =    D.PJTNO(+)
                        AND        A.COMPANY        =    E.COMPANY(+)    
                        AND        A.PLANT        =    E.PLANT(+)        
                        AND        A.PJTNO        =    E.PJTNO(+)
                        GROUP BY A.COMPANY, A.PLANT, 'D3'
                        UNION ALL
                        SELECT    LPAD(#{company_cd},3)    COMPANY    ,
                                LPAD(#{plant_cd},3)    PLANT    ,
                                'A1'                        GUBUN    ,
                                0                        PUR_AMT    ,
                                0                        ALLO_AMT
                        FROM    DUAL
                        UNION ALL
                        SELECT    LPAD(#{company_cd},3)    COMPANY    ,
                                LPAD(#{plant_cd},3)    PLANT    ,
                                'B1'                        GUBUN    ,
                                0                        PUR_AMT    ,
                                0                        ALLO_AMT
                        FROM    DUAL
                        UNION ALL
                        SELECT    LPAD(#{company_cd},3)    COMPANY    ,
                                LPAD(#{plant_cd},3)    PLANT    ,
                                'B2'                        GUBUN    ,
                                0                        PUR_AMT    ,
                                0                        ALLO_AMT
                        FROM    DUAL
                        UNION ALL
                        SELECT    LPAD(#{company_cd},3)    COMPANY    ,
                                LPAD(#{plant_cd},3)    PLANT    ,
                                'C1'                        GUBUN    ,
                                0                        PUR_AMT    ,
                                0                        ALLO_AMT
                        FROM    DUAL
                        UNION ALL
                        SELECT    LPAD(#{company_cd},3)    COMPANY    ,
                                LPAD(#{plant_cd},3)    PLANT    ,
                                'C2'                        GUBUN    ,
                                0                        PUR_AMT    ,
                                0                        ALLO_AMT
                        FROM    DUAL
                        UNION ALL
                        SELECT    LPAD(#{company_cd},3)    COMPANY    ,
                                LPAD(#{plant_cd},3)    PLANT    ,
                                'D1'                        GUBUN    ,
                                0                        PUR_AMT    ,
                                0                        ALLO_AMT
                        FROM    DUAL
                        UNION ALL
                        SELECT    LPAD(#{company_cd},3)    COMPANY    ,
                                LPAD(#{plant_cd},3)    PLANT    ,
                                'D2'                        GUBUN    ,
                                0                        PUR_AMT    ,
                                0                        ALLO_AMT
                        FROM    DUAL
                        UNION ALL
                        SELECT    LPAD(#{company_cd},3)    COMPANY    ,
                                LPAD(#{plant_cd},3)    PLANT    ,
                                'D3'                        GUBUN    ,
                                0                        PUR_AMT    ,
                                0                        ALLO_AMT
                        FROM    DUAL
                    )    K
            WHERE    K.COMPANY        =    #{company_cd}
            AND    K.PLANT        =    #{plant_cd}
            GROUP BY K.COMPANY, K.PLANT, K.GUBUN
            ORDER BY K.COMPANY, K.PLANT, K.GUBUN
	</select>
	
	<!-- 월말요약보고서(stock parts 발주건) -->
	<select id = "pdd02_list2" parameterType="hashmap" resultType="hashmap">
		SELECT  K.COMPANY,
                    K.PLANT,
                    nvl(SUM(K.PUR_AMT),0) PUR_AMT,
                    nvl(SUM(K.PUR_AMT2),0) PUR_AMT2,
                    SUBSTR(#{yymm},0,4) YYMMDD_FR
        FROM (
                SELECT A.COMPANY,
                A.PLANT,
                NVL(SUM((NVL(A.PUR_QTY,0) - NVL(A.CNCL_QTY,0)) * NVL(A.PUR_PRICE,0)),0) PUR_AMT,
                0 PUR_AMT2
                FROM PROD.PDA04_DTL A,
                PROD.PDA04_MST C,
                SALE.SCA09_MST B
                WHERE A.COMPANY = C.COMPANY 
                AND A.PLANT = C.PLANT   
                AND A.PDTNO = C.PDTNO   
                AND A.DRSEQ = C.DRSEQ  
                AND A.PUR_NO = C.PUR_NO
                AND A.COMPANY = B.COMPANY 
                AND A.PLANT = B.PLANT   
                AND A.PDTNO = B.PJTNO
                AND SUBSTR(A.PDTNO,2,1) = 'T'
                AND B.ONDOM = '5'
                AND NVL(A.PUR_QTY,0) - NVL(A.CNCL_QTY,0)  <![CDATA[ <> ]]>  0
                AND TO_CHAR(C.PUR_DATE,'YYYYMMDD') <![CDATA[ >= ]]> (SELECT to_char(add_months(to_date(SUBSTR(REPLACE(#{yymm}, '-', ''),0,6) || '01','yyyymmdd'),-1),'yyyymm') || PROD.SF_CODE_TOT('P','P801','S','3') FROM Dual)
                AND TO_CHAR(C.PUR_DATE,'YYYYMMDD') <![CDATA[ <= ]]> (SELECT SUBSTR(REPLACE(#{yymm}, '-', ''),0,6) || PROD.SF_CODE_TOT('P','P801','E','3') FROM DUAL)
                GROUP BY A.COMPANY, A.PLANT     
                UNION ALL
                SELECT A.COMPANY,
                A.PLANT,
                0 PUR_AMT,
                NVL(SUM((NVL(A.PUR_QTY,0) - NVL(A.CNCL_QTY,0)) * NVL(A.PUR_PRICE,0)),0) PUR_AMT2
                FROM PROD.PDA04_DTL A,
                PROD.PDA04_MST C,
                SALE.SCA09_MST B
                WHERE A.COMPANY = C.COMPANY 
                AND A.PLANT = C.PLANT   
                AND A.PDTNO = C.PDTNO   
                AND A.DRSEQ = C.DRSEQ
                AND A.PUR_NO = C.PUR_NO
                AND A.COMPANY = B.COMPANY 
                AND A.PLANT = B.PLANT   
                AND A.PDTNO = B.PJTNO
                AND SUBSTR(A.PDTNO,2,1) = 'T'
                AND B.ONDOM = '5'
                AND NVL(A.PUR_QTY,0) - NVL(A.CNCL_QTY,0) <![CDATA[ <> ]]> 0
                AND TO_CHAR(C.PUR_DATE,'YYYYMMDD') <![CDATA[ >= ]]> TO_CHAR(ADD_MONTHS(TO_DATE(
 (select substr(#{yymm},0,4) || '01'
 from dual) || '01','YYYYMMDD'),-1),'YYYYMM')  ||  PROD.SF_CODE_TOT('P','P801','S','3')
                AND TO_CHAR(C.PUR_DATE,'YYYYMMDD') <![CDATA[ <= ]]> (SELECT SUBSTR(REPLACE(#{yymm}, '-', ''),0,6) || PROD.SF_CODE_TOT('P','P801','E','3') FROM DUAL)
                GROUP BY A.COMPANY, A.PLANT
                UNION ALL
                SELECT    LPAD(#{company_cd},3) COMPANY,
                LPAD(#{plant_cd},3) PLANT,
                0 PUR_AMT,
                0 PUR_AMT2
                FROM DUAL
        ) K
        WHERE K.COMPANY = #{company_cd}
        AND K.PLANT = #{plant_cd}
        GROUP BY K.COMPANY, K.PLANT
        ORDER BY K.COMPANY, K.PLANT
	</select>
	
	<!-- 자재투입 상세분석표(수주건별 분석표) 데이터 생성 -->
	<select id = "pdd06_list1_1" parameterType="hashmap" resultType="hashmap">
		{ CALL SP_PDD06_RETRIEVE1(#{company_cd}, #{plant_cd}, REPLACE(#{yymm}, '-', ''), #{user_id}) }
	</select>
	
	<!-- 자재투입 상세분석표(수주건별 분석표) 차트 -->
	<select id = "pdd06_list1_2" parameterType="hashmap" resultType="hashmap">
		SELECT  COMPANY,
			        PLANT,
			        PJTNO,
			        GUBUN,
			        PJT_SEQ,
			        NVL(IN_AMT,0) AMT,
			        TRIM(LPAD(DECODE(GUBUN,'A0','수주금액','B0', '목표예산','C0','요구금액','D0','발주금액', 'E0','재고사용','F0','자재합계','G0','FAIL COST','비율(%)'),10)) GBN_NM,
			        (SELECT NVL(MAX(PJT_SEQ),0)
			        FROM PDD06_TMP01
			        WHERE COMPANY = #{company_cd}
			        AND PLANT = #{plant_cd}
			        AND PJT_SEQ <![CDATA[ <= ]]> 17
			        AND USER_ID = #{user_id} 
			        AND SUBSTR(PJTNO,1,3) NOT IN ('TMP','TOT')
			        ) MAX_SEQ,
			        USER_ID
		FROM    PDD06_TMP01
		WHERE COMPANY = #{company_cd}
		AND PLANT = #{plant_cd}
		AND PJT_SEQ <![CDATA[ <= ]]> 17
		AND USER_ID = #{user_id} 
		AND PJTNO NOT LIKE 'TMP%'
		AND PJTNO NOT IN ('TOTAL')
		AND GUBUN IN ('A0', 'B0', 'C0', 'D0')
		ORDER BY COMPANY, PLANT, PJT_SEQ, GUBUN, PJTNO
	</select>
	
	<!-- 자재투입 상세분석표(수주건별 분석표) 상세 -->
	<select id = "pdd06_detail1" parameterType="hashmap" resultType="hashmap">
		SELECT TA.COMPANY,
			       TA.PLANT,
			       TA.PJTNO, 
			       TA.PJTNM, 
			       TA.AMT_A0                                            AS AMT_A0,   
			       nvl(TA.AMT_B0,0)                                     AS AMT_B0, 
			       ROUND(DECODE(TA.AMT_A0,0,0,nvl(TA.AMT_B0,0) / nvl(TA.AMT_A0,0)), 3)*100   AS AMT_B1,   
			       nvl(TA.AMT_C0,0)                                     AS AMT_C0,  
			       ROUND(DECODE(TA.AMT_A0,0,0,nvl(TA.AMT_C0,0) / nvl(TA.AMT_A0,0)), 3)*100   AS AMT_C1,  
			       nvl(TA.AMT_D0,0)                                     AS AMT_D0,  
			       ROUND(DECODE(TA.AMT_A0,0,0,nvl(TA.AMT_D0,0) / nvl(TA.AMT_A0,0)), 3)*100   AS AMT_D1,  
			       nvl(TA.AMT_E0,0)                                     AS AMT_E0,  
			       ROUND(DECODE(TA.AMT_A0,0,0,nvl(TA.AMT_E0,0) / nvl(TA.AMT_A0,0)), 3)*100   AS AMT_E1,  
			       nvl(TA.AMT_D0,0) + nvl(TA.AMT_E0,0)                  AS AMT_F0,  
			       ROUND(DECODE(TA.AMT_A0,0,0,(nvl(TA.AMT_D0,0) + nvl(TA.AMT_E0,0)) / TA.AMT_A0), 3)*100 AS AMT_F1,  
			       nvl(TA.AMT_G0,0)                                     AS AMT_G0,
			       ROUND(DECODE(TA.AMT_A0,0,0,nvl(TA.AMT_G0,0) / nvl(TA.AMT_A0,0)), 3)*100   AS AMT_G1 
		FROM PROD.PDD06_VIW01 TA
		WHERE TA.COMPANY = #{company_cd}
		AND TA.PLANT = #{plant_cd}
		AND TO_CHAR(TA.SODAT,'YYYYMM') = SUBSTR(REPLACE(#{yymm}, '-', ''), 0, 7)
		ORDER BY TA.COMPANY, TA.PLANT, SUBSTR(TA.PJTNO,3,8)
	</select>
	
	<!-- 자재투입 상세분석표(월별 분석표) 데이터 생성 -->
	<select id = "pdd06_list2_1" parameterType="hashmap" resultType="hashmap">
		{ CALL SP_PDD06_RETRIEVE2(#{company_cd}, #{plant_cd}, SUBSTR(REPLACE(#{yymm}, '-', ''), 0, 4), #{user_id}) }
	</select>
	
	<!-- 자재투입 상세분석표(월별 분석표) -->
	<select id = "pdd06_list2_2" parameterType="hashmap" resultType="hashmap">
		SELECT  COMPANY,
			        PLANT,
			        YYMM,
			        DECODE(YYMM,'TOTAL', YYMM, SUBSTR(YYMM,5,2) || '월') MONTH,
			        GUBUN,
			        NVL(IN_AMT,0) AMT,
			        TRIM(LPAD(DECODE(GUBUN,'A0','수주금액','B0','목표예산','C0','요구금액','D0','발주금액','E0','재고사용','F0','자재합계','G0','FAIL COST','비율(%)'),10)) GBN_NM,
			        (SELECT NVL(MAX(SUBSTR(YYMM,5,2)),'00')
			         FROM PDD06_TMP02
			         WHERE COMPANY = #{company_cd}
			         AND PLANT = #{plant_cd}
			         AND USER_ID = #{user_id} 
			         AND YYMM <![CDATA[ <> ]]> 'TOTAL'
			         AND GUBUN = 'A0'
			         AND NVL(IN_AMT,0) <![CDATA[ > ]]> 0
			        ) MAX_YYMM,
			        USER_ID
		FROM PDD06_TMP02
		WHERE COMPANY = #{company_cd}
		AND PLANT = #{plant_cd}
		AND USER_ID = #{user_id}
		AND GUBUN IN ('A0', 'B0', 'C0', 'D0')
		AND YYMM NOT IN ('TOTAL')
		ORDER BY COMPANY, PLANT, GUBUN, YYMM
	</select>
	
	<!-- 자재투입 상세분석표(월별 분석표) 상세 -->
	<select id = "pdd06_detail2" parameterType="hashmap" resultType="hashmap">
		SELECT TA.COMPANY,
			       TA.PLANT,
			       TO_CHAR(TA.SODAT,'YYYYMM') AS YYYYMM, 
			       SUM(TA.AMT_A0) AS AMT_A0, 
			       SUM(nvl(TA.AMT_B0,0)) AS AMT_B0, 
			       ROUND(DECODE(SUM(TA.AMT_A0),0,0,SUM(nvl(TA.AMT_B0,0)) / SUM(nvl(TA.AMT_A0,0))), 2)*100 AS AMT_B1, 
			       SUM(nvl(TA.AMT_C0,0)) AS AMT_C0, 
			       ROUND(DECODE(SUM(TA.AMT_A0),0,0,SUM(nvl(TA.AMT_C0,0)) / SUM(nvl(TA.AMT_A0,0))), 2)*100 AS AMT_C1, 
			       SUM(nvl(TA.AMT_D0,0)) AS AMT_D0, 
			       ROUND(DECODE(SUM(TA.AMT_A0),0,0,SUM(nvl(TA.AMT_D0,0)) / SUM(nvl(TA.AMT_A0,0))), 2)*100 AS AMT_D1, 
			       SUM(nvl(TA.AMT_E0,0)) AS AMT_E0, 
			       ROUND(DECODE(SUM(TA.AMT_A0),0,0,SUM(nvl(TA.AMT_E0,0)) / SUM(nvl(TA.AMT_A0,0))), 2)*100 AS AMT_E1, 
			       SUM(nvl(TA.AMT_D0,0)) + SUM(nvl(TA.AMT_E0,0)) AS AMT_F0,
			       ROUND(DECODE(SUM(nvl(TA.AMT_A0,0)),0,0,(SUM(nvl(TA.AMT_D0,0)) + SUM(nvl(TA.AMT_E0,0))) / SUM(nvl(TA.AMT_A0,0))),2)*100 AS AMT_F1, 
			       SUM(nvl(TA.AMT_G0,0)) AS AMT_G0, 
			       ROUND(DECODE(SUM(TA.AMT_A0),0,0, SUM(nvl(TA.AMT_G0,0)) / SUM(nvl(TA.AMT_A0,0))), 2)*100 AS AMT_G1
		FROM PROD.PDD06_VIW01 TA 
		WHERE TA.COMPANY = #{company_cd}  
		AND TA.PLANT = #{plant_cd} 
		AND TO_CHAR(TA.SODAT,'YYYY') = SUBSTR(REPLACE(#{yymm}, '-', ''), 0, 4) 
		GROUP BY TA.COMPANY, TA.PLANT, TO_CHAR(TA.SODAT,'YYYYMM') 
		ORDER BY TA.COMPANY, TA.PLANT, TO_CHAR(TA.SODAT,'YYYYMM')
	</select>

	<!-- 월 발주현황(P/O별 발주상세내역) 조회 -->
	<select id = "pdb13_list1" parameterType="hashmap" resultType="hashmap">
		SELECT  A.COMPANY,
			        A.PLANT,
			        A.PDTNO,
			        SF_PJTNO_DATA(A.COMPANY, A.PLANT, SUBSTR(A.PDTNO,1,8), '1') PJTNO_NM,
			        SF_DRSEQ_DRDSC(A.COMPANY, A.PLANT, SUBSTR(A.PDTNO,1,9), A.DRSEQ) DRDSC,
			        A.DRSEQ,
			        A.PUR_NO,
			        B.PUR_SEQ,
			        B.ITEM,
			        B.ITEM_NAME,
			        B.NORM,
			        B.UOM,
			        A.SUPL_CLASS,
			        B.CURRENCY,
			        A.VENDOR,
			        C.BY_NM,
			        TO_CHAR(A.PUR_DATE, 'YYYY-MM-DD') PUR_DATE,
			        A.PAY_METHOD,
			        A.PUR_TYPE,
			        NVL(B.PUR_QTY, 0) - NVL(B.CNCL_QTY, 0) PUR_QTY,
			        NVL(B.PUR_PRICE,0) PUR_PRICE,
			        ((NVL(B.PUR_QTY,0) - NVL(B.CNCL_QTY, 0)) * NVL(B.PUR_PRICE,0)) PUR_AMT,
			        NVL(B.NEGO_PRICE,0) NEGO_PRICE,
			        TO_CHAR(B.DELV_DATE, 'YYYY-MM-DD') DELV_DATE,
			        NVL(B.ALLO_QTY,0) ALLO_QTY
		FROM PDA04_MST A, PDA04_DTL B, ACNT.SAA_BUYER C, SCA09_MST F
		WHERE A.COMPANY = #{company_cd}
		AND A.PLANT = #{plant_cd}
		<if test = "date_fr != null and date_fr != '' and date_to != null and date_to != ''">
			AND TRUNC(A.PUR_DATE) BETWEEN REPLACE(substr(#{date_fr}, 1, 10), '-', '') AND REPLACE(substr(#{date_to}, 1, 10), '-', '')
		</if>
		<if test = "cust_cd1 != null and cust_cd1 != '' and cust_cd2 != null and cust_cd2 != ''">
			AND A.VENDOR BETWEEN #{cust_cd1} AND #{cust_cd2}
		</if>
		<if test = "pjtno1 != null and pjtno1 != '' and pjtno2 != null and pjtno2 != ''">
			AND SUBSTR(A.PDTNO,3,8) BETWEEN SUBSTR(#{pjtno1},3,8) AND SUBSTR(#{pjtno2},3,8)
		</if>
		<if test = "itnbr1 != null and itnbr1 != '' and itnbr2 != null and itnbr2 != ''">
			AND B.ITEM BETWEEN #{itnbr1} AND #{itnbr2}
		</if>
		<if test = "purno1 != null and purno1 != '' and purno2 != null and purno2 != ''">
			AND A.PUR_NO BETWEEN #{purno1} AND #{purno2}
		</if>
		<if test="pjtno1 != null and pjtno1 !=''">
			AND A.PDTNO = #{pjtno1}
		</if>
		<if test="cust_cd1 != null and cust_cd1 !=''">
			AND A.VENDOR = #{cust_cd1}
		</if>
		<if test="itnbr1 != null and itnbr1 !=''">
			AND B.ITEM = #{itnbr1}
		</if>
		AND    A.COMPANY = B.COMPANY(+)
		AND    A.PLANT    =    B.PLANT(+)
		AND    A.PDTNO    =    B.PDTNO(+)
		AND    A.DRSEQ    =    B.DRSEQ(+)
		AND    A.PUR_NO    =    B.PUR_NO(+)
		AND    A.VENDOR    =    C.BY_CD(+)
		AND    A.COMPANY    = F.COMPANY(+)
		AND    A.PLANT        = F.PLANT(+)
		AND    A.PDTNO        = F.PJTNO(+)
		ORDER BY A.PUR_NO, B.ITEM
	</select>
	
	<!-- 월 발주현황(업체별 발주집계표) 조회 -->
	<select id = "pdb13_list2" parameterType="hashmap" resultType="hashmap">	
		SELECT  A.COMPANY, A.PLANT, A.VENDOR, B.ITEM, 
			        NVL(Max(Nvl(B.PUR_PRICE,0)),0) PUR_PRICE,
			        NVL(Max(Nvl(B.NEGO_PRICE,0)),0) NEGO_PRICE,
			        NVL(SUM(Nvl(B.PUR_QTY,0) - Nvl(B.CNCL_QTY,0)),0) PUR_QTY,
			        NVL(SUM((Nvl(B.PUR_QTY,0) - Nvl(B.CNCL_QTY,0) ) * Nvl(B.PUR_PRICE,0)),0) PUR_AMT,
			        NVL(Max(NVL(C.BY_NM,'')),'') BY_NM,
			        NVL(Max(NVL(B.ITEM_NAME,'')),'') ITEM_NAME,
			        NVL(Max(NVL(B.NORM,'')),'') NORM,
			        NVL(Max(NVL(B.UOM,'')),'') UOM    
		FROM PDA04_MST A, PDA04_DTL B, ACNT.SAA_BUYER C, SCA09_MST F
		WHERE A.COMPANY = #{company_cd}
		AND A.PLANT = #{plant_cd}
		AND TRUNC(A.PUR_DATE) BETWEEN TRUNC(TO_DATE(REPLACE(substr(#{date_fr}, 1, 10), '-', ''))) AND TRUNC(TO_DATE(REPLACE(substr(#{date_to}, 1, 10), '-', '')))
		<if test="cust_cd1 != null and cust_cd1 != ''">
			AND A.VENDOR = #{cust_cd1}
		</if>
		<if test="pjtno1 != null and pjtno1 != ''">
			AND A.PDTNO = #{pjtno1}
		</if>
		<if test="itnbr1 != null and itnbr1 != ''">
			AND B.ITEM = #{itnbr1}
		</if>
		AND A.COMPANY    = B.COMPANY(+)
		AND A.PLANT = B.PLANT(+)
		AND A.PDTNO = B.PDTNO(+)
		AND A.DRSEQ = B.DRSEQ(+)
		AND A.PUR_NO = B.PUR_NO(+)
		AND A.VENDOR = C.BY_CD(+)
		AND A.COMPANY = F.COMPANY(+)
		AND A.PLANT = F.PLANT(+)
		AND A.PDTNO = F.PJTNO(+)
		GROUP BY A.COMPANY, A.PLANT, A.VENDOR, B.ITEM
		ORDER BY A.VENDOR, B.ITEM
	</select>
	
	<!-- 월 발주현황(PJT별 발주집계표) 조회 -->
	<select id = "pdb13_list3" resultType="hashmap">	
		SELECT  A.COMPANY,
			        A.PLANT,
			        A.PDTNO,
			        B.ITEM,
			        MAX(NVL(B.PUR_PRICE,0)) PUR_PRICE,
			        MAX(NVL(B.NEGO_PRICE,0)) NEGO_PRICE,
			        SUM(NVL(B.PUR_QTY,0) - NVL(B.CNCL_QTY,0)) PUR_QTY,
			        SUM((NVL(B.PUR_QTY,0) - NVL(B.CNCL_QTY,0)) * NVL(B.PUR_PRICE,0)) PUR_AMT,
			        SF_PJTNO_DATA(A.COMPANY, A.PLANT, SUBSTR(A.PDTNO,1,8), '1') PJTNO_NM,
			        SF_ITNBR_TOT2(A.COMPANY, B.ITEM, '2', '1') ITEM_NAME,
			        SF_ITNBR_TOT2(A.COMPANY, B.ITEM, '2', '2') NORM,
			        SF_ITNBR_TOT2(A.COMPANY, B.ITEM, '2', '5') UOM    
		FROM PDA04_MST A, PDA04_DTL B, SCA09_MST F
		WHERE A.COMPANY = #{company_cd}
		AND A.PLANT = #{plant_cd}
		AND TRUNC(A.PUR_DATE) BETWEEN REPLACE(substr(#{date_fr}, 1, 10), '-', '') AND REPLACE(substr(#{date_to}, 1, 10), '-', '')
		<if test="cust_cd1 != null and cust_cd1 != '' and cust_cd2 != null and cust_cd2 != ''">
			AND A.VENDOR BETWEEN #{cust_cd1} AND #{cust_cd2}
		</if>
		<if test="pjtno1 != null and pjtno1 != '' and pjtno2 != null and pjtno2 != ''">
			AND SUBSTR(A.PDTNO,3,8) BETWEEN SUBSTR(#{pjtno1},3,8) AND SUBSTR(#{pjtno2},3,8)
		</if>
		<if test="itnbr1 != null and itnbr1 != '' and itnbr2 != null and itnbr2 != ''">
			AND B.ITEM BETWEEN #{itnbr1} AND #{itnbr2}
		</if>
		<if test="purno1 != null and purno1 != '' and purno2 != null and purno2 != ''">
			AND A.PUR_NO BETWEEN #{purno1} AND #{purno2}
		</if>
		<if test="pjtno1 != null and pjtno1 !=''">
			AND A.PDTNO = #{pjtno1}
		</if>
		<if test="cust_cd1 != null and cust_cd1 !=''">
			AND A.VENDOR = #{cust_cd1}
		</if>
		<if test="itnbr1 != null and itnbr1 !=''">
			AND B.ITEM = #{itnbr1}
		</if>
		AND A.COMPANY = B.COMPANY(+)
		AND A.PLANT = B.PLANT(+)
		AND A.PDTNO = B.PDTNO(+)
		AND A.DRSEQ = B.DRSEQ(+)
		AND A.PUR_NO = B.PUR_NO(+)
		AND A.COMPANY = F.COMPANY(+)
		AND A.PLANT = F.PLANT(+)
		AND A.PDTNO = F.PJTNO(+)
		GROUP BY A.COMPANY, A.PLANT, A.PDTNO, B.ITEM
		ORDER BY A.PDTNO, B.ITEM
	</select>	
	
	<!-- 월 발주현황(품목별 발주집계표) 조회 -->
	<select id = "pdb13_list4" parameterType="hashmap" resultType="hashmap">	
		SELECT  A.COMPANY, A.PLANT, '', B.ITEM, 
			        NVL(Max(Nvl(B.PUR_PRICE,0)),0) PUR_PRICE,
			        NVL(Max(Nvl(B.NEGO_PRICE,0)),0) NEGO_PRICE,
			        NVL(SUM(Nvl(B.PUR_QTY,0) - Nvl(B.CNCL_QTY,0)),0) PUR_QTY,
			        NVL(SUM((Nvl(B.PUR_QTY,0) - Nvl(B.CNCL_QTY,0) ) * Nvl(B.PUR_PRICE,0)),0) PUR_AMT,
			        '' BY_NM,
			        NVL(Max(NVL(B.ITEM_NAME,'')),'') ITEM_NAME,
			        NVL(Max(NVL(B.NORM,'')),'') NORM,
			        NVL(Max(NVL(B.UOM,'')),'') UOM,
			        NVL(SUM(NVL(ALLO_QTY,0)),0) ALLO_QTY
		FROM PDA04_MST A, PDA04_DTL B, SCA09_MST F
		WHERE A.COMPANY = #{company_cd}
		AND A.PLANT = #{plant_cd}
		AND TRUNC(A.PUR_DATE) BETWEEN TRUNC(TO_DATE(REPLACE(substr(#{date_fr}, 1, 10), '-', ''))) AND TRUNC(TO_DATE(REPLACE(substr(#{date_to}, 1, 10), '-', '')))
		<if test="cust_cd1 != null and cust_cd1 != ''">
			AND A.VENDOR = #{cust_cd1}
		</if>
		<if test="pjtno1 != null and pjtno1 != ''">
			AND A.PDTNO = #{pjtno1}
		</if>
		<if test="itnbr1 != null and itnbr1 != ''">
			AND B.ITEM = #{itnbr1}
		</if>
		AND A.COMPANY = B.COMPANY(+)
		AND A.PLANT = B.PLANT(+)
		AND A.PDTNO = B.PDTNO(+)
		AND A.DRSEQ = B.DRSEQ(+)
		AND A.PUR_NO = B.PUR_NO(+)
		AND A.COMPANY = F.COMPANY(+)
		AND A.PLANT = F.PLANT(+)
		AND A.PDTNO = F.PJTNO(+)
		GROUP BY A.COMPANY, A.PLANT, B.ITEM
		ORDER BY B.ITEM
	</select>
	
	<!-- 월 발주현황(업체별 발주내역 총집계표) 조회 -->
	<select id = "pdb13_list5" parameterType="hashmap" resultType="hashmap">	
		SELECT  A.COMPANY,
		        	A.PLANT,
			        A.VENDOR,
			        SUM(NVL(B.PUR_QTY,0) - NVL(B.CNCL_QTY,0)) PUR_QTY,    
			        SUM(NVL(B.ALLO_QTY,0) * NVL(B.PUR_PRICE,0)) ALLO_AMT,
			        SUM((NVL(B.PUR_QTY,0) - NVL(B.CNCL_QTY,0)) * NVL(B.NEGO_PRICE,0)) NEGO_AMT,
			        SUM((NVL(B.PUR_QTY,0) - NVL(B.CNCL_QTY,0)) * NVL(B.PUR_PRICE,0)) PUR_AMT,
			        NVL(MAX(NVL(C.BY_NM,'')),'') BY_NM                    
		FROM PDA04_MST A, PDA04_DTL B, ACNT.SAA_BUYER C, SCA09_MST F
		WHERE A.COMPANY = #{company_cd}
		AND A.PLANT = #{plant_cd}
		AND TRUNC(A.PUR_DATE) BETWEEN REPLACE(substr(#{date_fr}, 1, 10), '-', '') AND REPLACE(substr(#{date_to}, 1, 10), '-', '')
		<if test="cust_cd1 != null and cust_cd1 != '' and cust_cd2 != null and cust_cd2 != ''">
			AND A.VENDOR BETWEEN #{cust_cd1} AND #{cust_cd2}
		</if>
		<if test="pjtno1 != null and pjtno1 != '' and pjtno2 != null and pjtno2 != ''">
			AND SUBSTR(A.PDTNO,3,8) BETWEEN SUBSTR(#{pjtno1},3,8) AND SUBSTR(#{pjtno2},3,8)
		</if>
		<if test="itnbr1 != null and itnbr1 != '' and itnbr2 != null and itnbr2 != ''">
			AND B.ITEM BETWEEN #{itnbr1} AND #{itnbr2}
		</if>
		<if test="purno1 != null and purno1 != '' and purno2 != null and purno2 != ''">
			AND A.PUR_NO BETWEEN #{purno1} AND #{purno2}
		</if>
		<if test="pjtno1 != null and pjtno1 !=''">
			AND A.PDTNO = #{pjtno1}
		</if>
		<if test="cust_cd1 != null and cust_cd1 !=''">
			AND A.VENDOR = #{cust_cd1}
		</if>
		<if test="itnbr1 != null and itnbr1 !=''">
			AND B.ITEM = #{itnbr1}
		</if>
		AND A.COMPANY = B.COMPANY(+)
		AND A.PLANT = B.PLANT(+)
		AND A.PDTNO = B.PDTNO(+)
		AND A.DRSEQ = B.DRSEQ(+)
		AND A.PUR_NO = B.PUR_NO(+)
		AND A.VENDOR = C.BY_CD(+)
		AND A.COMPANY = F.COMPANY(+)
		AND A.PLANT = F.PLANT(+)
		AND A.PDTNO = F.PJTNO(+)
		GROUP BY A.COMPANY, A.PLANT, A.VENDOR
		ORDER BY A.VENDOR
	</select>	
	
	<!-- 월 발주현황(PJT별 발주내역 총집계표) 조회 -->
	<select id = "pdb13_list6" parameterType="hashmap" resultType="hashmap">
		SELECT  A.COMPANY,
			        A.PLANT,
			        A.PDTNO,
			        SUM(NVL(B.PUR_QTY,0) - NVL(B.CNCL_QTY,0)) PUR_QTY,    
			        SUM(NVL(B.ALLO_QTY,0) * NVL(B.PUR_PRICE,0)) ALLO_AMT,
			        SUM((NVL(B.PUR_QTY,0) - NVL(B.CNCL_QTY,0)) * NVL(B.NEGO_PRICE,0)) NEGO_AMT,
			        SUM((NVL(B.PUR_QTY,0) - NVL(B.CNCL_QTY,0)) * NVL(B.PUR_PRICE,0)) PUR_AMT,
			        SF_PJTNO_DATA(A.COMPANY, A.PLANT, SUBSTR(A.PDTNO,1,8), '1') PJTNO_NM        
		FROM PDA04_MST A, PDA04_DTL B, SCA09_MST F
		WHERE A.COMPANY = #{company_cd}
		AND A.PLANT = #{plant_cd}
		AND TRUNC(A.PUR_DATE) BETWEEN REPLACE(substr(#{date_fr}, 1, 10), '-', '') AND REPLACE(substr(#{date_to}, 1, 10), '-', '')
		<if test="cust_cd1 != null and cust_cd1 != '' and cust_cd2 != null and cust_cd2 != ''">
			AND A.VENDOR BETWEEN #{cust_cd1} AND #{cust_cd2}
		</if>
		<if test="pjtno1 != null and pjtno1 != '' and pjtno2 != null and pjtno2 != ''">
			AND SUBSTR(A.PDTNO,3,6) BETWEEN SUBSTR(#{pjtno1},3,6) AND SUBSTR(#{pjtno2},3,6)
		</if> 
		<if test="itnbr1 != null and itnbr1 != '' and itnbr2 != null and itnbr2 != ''">
			AND B.ITEM BETWEEN #{itnbr1} AND #{itnbr2}
		</if>
		<if test="purno1 != null and purno1 != '' and purno2 != null and purno2 != ''">
			AND A.PUR_NO BETWEEN #{purno1} AND #{purno2}
		</if>
		<if test="pjtno1 != null and pjtno1 !=''">
			AND A.PDTNO = #{pjtno1}
		</if>
		<if test="cust_cd1 != null and cust_cd1 !=''">
			AND A.VENDOR = #{cust_cd1}
		</if>
		<if test="itnbr1 != null and itnbr1 !=''">
			AND B.ITEM = #{itnbr1}
		</if>
		AND A.COMPANY = B.COMPANY(+)
		AND A.PLANT = B.PLANT(+)
		AND A.PDTNO = B.PDTNO(+)
		AND A.DRSEQ = B.DRSEQ(+)
		AND A.PUR_NO = B.PUR_NO(+)
		AND A.COMPANY = F.COMPANY(+)
		AND A.PLANT = F.PLANT(+)
		AND A.PDTNO = F.PJTNO(+)
		GROUP BY A.COMPANY, A.PLANT, A.PDTNO
		ORDER BY A.PDTNO
	</select>	
	
	<!-- 부품 입고대기 현황 -->
	<select id = "pea03_list" parameterType="hashmap" resultType="hashmap">
		SELECT  A.COMPANY,
			        A.DEPS_NO,   
			        A.VENDOR,
			        A.VENDOR VENDOR_NAME, 
			        A.PLANT,
			        A.PDTNO,
			        A.ORDER_NO, 
			        A.ITEM,
			        B.NAME ITEM_NAME_K,   
			        B.SPEC1 NORM1,   
			        B.UNMSR PUR_UM,
			        C.IQC_YN,
			        DECODE(C.IQC_YN, 'Y', (NVL(A.DELV_QTY,0) - NVL(A.INSP_QTY,0)), 0) IQC_DELAY,
			        DECODE(C.IQC_YN, 'Y', (NVL(A.INSP_QTY,0) - NVL(A.DEPS_QTY,0)), (NVL(A.DELV_QTY,0) - NVL(A.DEPS_QTY,0))) INC_DELAY, 
			        TO_CHAR(A.DELV_DATE, 'YYYY-MM-DD') DELV_DATE,
			        TO_CHAR(A.INSP_DATE, 'YYYY-MM-DD') INSP_DATE,
			        TO_CHAR(A.DEPS_DATE, 'YYYY-MM-DD') DEPS_DATE,   
			        NVL(A.DELV_QTY,0) DELV_QTY,
			        NVL(A.INSP_QTY,0) INSP_QTY,   
			        NVL(A.DEPS_QTY,0) DEPS_QTY,
			        A.STEP_STATUS
		FROM SALE.SAB01_MST B, PEB01_MST A, PAD01_MST C
		WHERE A.COMPANY = #{company_cd}
		AND A.PLANT = #{plant_cd}
		<if test="cust_cd != null and cust_cd != ''">
			AND (A.VENDOR = #{cust_cd} OR #{cust_cd} = '*')
		</if>
		<if test="pjtno != null and pjtno != ''">
			AND A.PDTNO LIKE #{pjtno} || '%'
		</if>
		<if test="drseq != null and drseq != ''">
			AND A.ORDER_NO LIKE #{drseq} || '%'
		</if>
		<if test="item1 != null and item1 != '' and item2 != null and item2 != ''">
			AND A.ITEM BETWEEN #{item1} AND #{item2}
		</if>
		<if test="delv_date1 != null and delv_date1 != '' and delv_date2 != null and delv_date2 != ''">
			AND TRUNC(A.DELV_DATE) BETWEEN REPLACE(substr(#{delv_date1}, 1, 10), '-', '') AND REPLACE(substr(#{delv_date2}, 1, 10), '-', '')
		</if>
		AND A.PUR_NO IS NOT NULL
		AND A.COMPANY = B.COMPANY
		AND A.ITEM = B.ITNBR
		AND A.COMPANY = C.COMPANY
		AND A.ITEM = C.ITNBR
		ORDER BY A.VENDOR, A.DEPS_NO, A.ITEM
	</select> 
	
	<!-- 일자별 자재입고 현황 -->
	<select id = "peb14_list1" parameterType="hashmap" resultType="hashmap">
		SELECT  TO_CHAR(A.DEPS_DATE, 'YYYY-MM-DD') DEPS_DATE,
			        A.ITEM,   
			        B.NAME  ITEM_NAME_K,   
			        B.SPEC1 NORM1,   
			        SF_ITNBR_TOT(A.COMPANY, A.ITEM, '5') STOCK_UM, 
			        B.IFORM ITEM_TYPE,  
			        A.DEPS_TYPE,
			        A.DEPS_QTY, 
			        A.DEPS_PRICE, 
			        NVL(A.DEPS_AMT, 0) DEPS_AMT,
			        NVL(A.DEPS_FAMT, 0) DEPS_FAMT,
			        A.PLANT,
			        A.VENDOR VENDOR,
			        A.VENDOR VENDOR_NAME,
			        A.DEPS_NO,
			        A.SUPL_CLASS,
			        A.CURRENCY,
			        TO_CHAR(A.DELV_DATE, 'YYYY-MM-DD') DELV_DATE,
			        B.JIJIC,
			        B.JEJOS,
			        A.PDTNO,
			        SF_PROJECT_NM(A.COMPANY,A.PLANT,A.PDTNO) PJT_NM,
			        A.PUR_NO,
			        SF_ITNBR_TOT(A.COMPANY, A.ITEM, '9') ABC_CD,
			        A.COMPANY
		FROM PEB01_MST A, SALE.SAB01_MST B  
		WHERE A.COMPANY = #{company_cd}
		AND A.PLANT = #{plant_cd}
		<if test="date1 != null and date1 != '' and date2 != null and date2 != ''">
			AND A.DEPS_DATE BETWEEN REPLACE(substr(#{date1}, 1, 10), '-', '') AND REPLACE(substr(#{date2}, 1, 10), '-', '')
		</if>
		<if test="cust_cd != null and cust_cd != ''">
			AND (A.VENDOR = #{cust_cd} OR #{cust_cd} = '*')
		</if>
		<if test="item != null and item != ''">
			AND (A.ITEM = #{item} OR #{item} = '*')
		</if>
		AND A.SUPL_CLASS <![CDATA[ <> ]]> 'OS'
		AND A.STEP_STATUS = '50' 
		AND B.COMPANY = A.COMPANY
		AND B.ITNBR   = A.ITEM
		<if test="item_type != null and item_type != ''">
			AND B.IFORM LIKE #{item_type}||'%'
		</if>
		ORDER BY A.VENDOR, A.PUR_NO, A.DEPS_NO, A.ITEM, A.PDTNO
	</select>
	
	<!-- 일자별 자재입고 현황(작업지시별 입고현황) -->
	<select id = "peb14_list2" parameterType="hashmap" resultType="hashmap">
		SELECT  A.PDTNO,   
			        SF_PROJECT_NM(A.COMPANY, A.PLANT, A.PDTNO) PJT_NM,
			        ROUND(SUM(NVL(A.DEPS_AMT,0))) QTY,
			        B.MATMT,
			        A.COMPANY    
		FROM PEB01_MST A, SALE.SCA09_MST B
		WHERE A.COMPANY = B.COMPANY
		AND A.PLANT = B.PLANT
		AND substr(a.pdtno,1,8) = B.PJTNO
		AND A.COMPANY = #{company_cd}
		AND A.PLANT   = #{plant_cd}
		AND A.STEP_STATUS = '50' 
		<if test="date1 != null and date1 != '' and date2 != null and date2 != ''">
			AND A.DEPS_DATE BETWEEN substr(#{date1}, 1, 10) AND substr(#{date2}, 1, 10)
		</if>
		GROUP BY A.PDTNO, SF_PROJECT_NM(A.COMPANY, A.PLANT, A.PDTNO), B.MATMT, A.COMPANY    
	</select>
	
	<!-- 일자별 자재입고 현황(거래처별 입고현황) -->
	<select id = "peb14_list3" parameterType="hashmap" resultType="hashmap">
		SELECT  A.VENDOR,
			        B.BY_NM,
			        B.BU_CD,
			        B.BY_TEL_NO,
			        B.BY_PRSN,
			        ROUND(SUM(NVL(A.DEPS_AMT,0)))  QTY,
			        SUM(DECODE(C.MCCOD,'1',A.DEPS_AMT,0)) TOT_1,
			        SUM(DECODE(C.MCCOD,'2',A.DEPS_AMT,0)) TOT_2,
			        A.COMPANY
		FROM PEB01_MST A, ACNT.SAA_BUYER B, SALE.SAB01_MST C
		WHERE A.COMPANY = #{company_cd}
		AND A.PLANT   = #{plant_cd}
		AND A.ITEM = C.ITNBR
		AND STEP_STATUS = '50' 
		<if test="date1 != null and date1 != '' and date2 != null and date2 != ''">
			AND A.DEPS_DATE BETWEEN REPLACE(substr(#{date1}, 1, 10), '-', '') AND REPLACE(substr(#{date2}, 1, 10), '-', '')
		</if>
		AND B.BY_CD = A.VENDOR
		GROUP BY A.VENDOR, B.BY_NM, B.BU_CD, B.BY_TEL_NO, B.BY_PRSN,  A.COMPANY
		ORDER BY B.BY_NM
	</select>
	
	<!-- 일자별 자재입고 현황(작업지시별/품번별 입고현황) -->
	<select id="peb14_list4" parameterType="hashmap" resultType="hashmap">
		SELECT  TO_CHAR(A.DEPS_DATE, 'YYYY-MM-DD') DEPS_DATE,
			        A.ITEM,   
			        B.NAME  ITEM_NAME_K,   
			        B.SPEC1 NORM1,   
			        SF_ITNBR_TOT(A.COMPANY, A.ITEM, '5') STOCK_UM, 
			        B.IFORM ITEM_TYPE,  
			        A.DEPS_TYPE,
			        A.DEPS_QTY, 
			        A.DEPS_PRICE, 
			        NVL(A.DEPS_AMT, 0) DEPS_AMT,
			        NVL(A.DEPS_FAMT, 0) DEPS_FAMT,
			        A.PLANT,
			        A.VENDOR VENDOR,
			        A.VENDOR VENDOR_NAME,
			        A.DEPS_NO,
			        A.SUPL_CLASS,
			        A.CURRENCY,
			        TO_CHAR(A.DELV_DATE, 'YYYY-MM-DD') DELV_DATE,
			        B.JIJIC,
			        B.JEJOS,
			        A.PDTNO,
			        SF_PROJECT_NM(A.COMPANY,A.PLANT,A.PDTNO) PJT_NM,
			        A.PUR_NO,
			        SF_ITNBR_TOT(A.COMPANY, A.ITEM, '9') ABC_CD,
			        C.BY_NM, 
			        A.COMPANY
		FROM PEB01_MST A, SALE.SAB01_MST B, ACNT.SAA_BUYER C
		WHERE A.COMPANY = #{company_cd}
		AND A.PLANT = #{plant_cd}
		<if test="date1 != null and date1 != '' and date2 != null and date2 != ''">
			AND A.DEPS_DATE BETWEEN REPLACE(substr(#{date1}, 1, 10), '-', '') AND REPLACE(substr(#{date2}, 1, 10), '-', '')
		</if>
		AND A.SUPL_CLASS <![CDATA[ <> ]]> 'OS'
		AND A.STEP_STATUS = '50' 
		AND B.COMPANY = A.COMPANY
		AND B.ITNBR   = A.ITEM
		AND A.VENDOR  = C.BY_CD
		ORDER BY A.DEPS_DATE, A.PDTNO, A.VENDOR, A.ITEM
	</select>
		
	<!-- 설계/발주/입고/출고현황(자재투입진척현황(상세)) -->
	<select id = "pec12_list1" parameterType="hashmap" resultType="hashmap">
		SELECT  A.COMPANY,
			        A.PLANT,
			        A.PJTNO,
			        SF_PJTNO_DATA(COMPANY, PLANT, A.PJTNO,'1') PJTNO_NM,
			        A.DRSEQ,
			        A.ITEM,
			        A.ITEM_SEQ,
			        NVL(A.PL_QTY ,0) PL_QTY,
			        A.PUR_NO,
			        A.PUR_SEQ,
			        NVL(A.ALLO_QTY,0) ALLO_QTY,
			        NVL(A.PUR_QTY,0) PUR_QTY,
			        NVL(A.REM_QTY,0) REM_QTY,
			        A.DEPS_NO,
			        NVL(A.DELV_QTY,0) DELV_QTY,
			        NVL(A.DEPS_QTY,0) DEPS_QTY,
			        A.OUT_NO,
			        NVL(A.OUT_REQ_QTY,0) OUT_REQ_QTY,
			        NVL(A.OUT_QTY,0) OUT_QTY,
			        SF_PJTNO_DATA(A.COMPANY, A.PLANT, A.PJTNO,'1') PJT_NM,
			        SF_ITNBR_TOT2(A.COMPANY, A.ITEM,'2','1') ITEM_NM,
			        SF_ITNBR_TOT2(A.COMPANY, A.ITEM,'2','2') ITEM_SPEC,
			        (SELECT VENDOR
			        FROM PROD.PDA04_MST
			        WHERE COMPANY = A.COMPANY
			        AND PLANT = A.PLANT
			        AND PDTNO = A.PJTNO
			        AND DRSEQ = A.DRSEQ
			        AND PUR_NO = A.PUR_NO) PUR_VENDOR,
			        (SELECT VENDOR
			        FROM PROD.PEB01_MST
			        WHERE COMPANY = A.COMPANY
			        AND PLANT = A.PLANT
			        AND DEPS_NO = A.DEPS_NO
			        AND ITEM = A.ITEM) DEPS_VENDOR
		FROM PROD.PEC12_TMP01 A
		WHERE COMPANY = #{company}
		AND PLANT = #{plant_cd}
		<if test = "pjtno1 != null and pjtno1 != '' and pjtno2 != null and pjtno2 != ''">
			AND SUBSTR(PJTNO,3,6) BETWEEN SUBSTR(#{pjtno1},3,6) AND SUBSTR(#{pjtno2},3,6)
		</if>
		<if test = "drseq != null and drseq != '' and drseq2 != null and drseq2 != ''">
			AND DRSEQ BETWEEN #{drseq} AND #{drseq2}
		</if>
		<if test = "item != null and item != '' and item2 != null and item2 != ''">
			AND ITEM BETWEEN #{item} AND #{item2}
		</if>
		<if test = "pjtno1 != null and pjtno1 != ''">
			AND PJTNO = #{pjtno1}
		</if>
		ORDER BY A.PJTNO, A.DRSEQ, A.ITEM, A.ITEM_SEQ
	</select>
	
	<!-- 설계/발주/입고/출고현황(자재투입진척현황(집계)) -->
	<select id = "pec12_list2" parameterType="hashmap" resultType="hashmap">
		SELECT 	A.COMPANY,
					A.PLANT,
					A.PJTNO,
					SF_PJTNO_DATA(COMPANY, PLANT, A.PJTNO, '1') PJTNO_NM,
					A.DRSEQ,
					A.ITEM,
					NVL(SUM(NVL(A.PL_QTY ,0)),0) PL_QTY,
					NVL(SUM(NVL(A.ALLO_QTY,0)),0) ALLO_QTY,
					NVL(SUM(NVL(A.PUR_QTY,0)),0) PUR_QTY,
					NVL(SUM(NVL(A.REM_QTY,0)),0) REM_QTY,
					NVL(SUM(NVL(A.DELV_QTY,0)),0) DELV_QTY,
					NVL(SUM(NVL(A.DEPS_QTY,0)),0) DEPS_QTY,
					NVL(SUM(NVL(A.OUT_REQ_QTY,0)),0) OUT_REQ_QTY,
					NVL(SUM(NVL(A.OUT_QTY,0)),0) OUT_QTY,
					SF_PJTNO_DATA(A.COMPANY, A.PLANT, A.PJTNO, '1') PJT_NM,
					SF_ITNBR_TOT2(A.COMPANY, A.ITEM, '2', '1') ITEM_NM,
					SF_ITNBR_TOT2(A.COMPANY, A.ITEM, '2', '2') ITEM_SPEC
		FROM PROD.PEC12_TMP01 A
		WHERE COMPANY = #{company}
		AND PLANT = #{plant_cd}
		<if test = "pjtno1 != null and pjtno1 != '' and pjtno2 != null and pjtno2 != ''">
			AND SUBSTR(PJTNO,3,6) BETWEEN SUBSTR(#{pjtno1},3,6) AND SUBSTR(#{pjtno2},3,6)
		</if>
		<if test = "drseq != null and drseq != '' and drseq2 != null and drseq2 != ''">
			AND DRSEQ BETWEEN #{drseq} AND #{drseq2}
		</if>
		<if test = "item != null and item != '' and item2 != null and item2 != ''">
			AND ITEM BETWEEN #{item} AND #{item2}
		</if>
		<if test = "pjtno1 != null and pjtno1 != ''">
			AND PJTNO = #{pjtno1}
		</if> 
		GROUP BY A.COMPANY, A.PLANT,A.PJTNO, A.DRSEQ, A.ITEM
		ORDER BY A.PJTNO, A.DRSEQ, A.ITEM
	</select>
	
	<!-- 부품재고현황조회 -->
	<select id = "peg01_list" parameterType="hashmap" resultType="hashmap">
		SELECT  B.ITEM,
			        A.NAME ITEM_NAME_K,
			        A.SPEC1 NORM1,
			        SF_ITNBR_TOT(A.COMPANY, A.ITNBR, '10') STOCK_UM,
			        A.IFORM ITEM_TYPE,
			        SUM(NVL(B.BASIC_QTY,0)) BASIC_QTY,
			        SUM(NVL(B.BASIC_AMT,0)) BASIC_AMT,
			        SUM(NVL(B.DEPS_QTY,0)) DEPS_QTY,
			        SUM(NVL(B.DEPS_AMT,0)) DEPS_AMT,
			        SUM(NVL(B.OUT_QTY,0)) OUT_QTY,
			        SUM(NVL(B.OUT_AMT,0)) OUT_AMT,
			        SUM(NVL(B.STOCK_QTY,0)) STOCK_QTY,
			        SUM(NVL(B.STOCK_AMT,0)) STOCK_AMT
		FROM SALE.SAB01_MST A, PEG01_MST B
		WHERE A.COMPANY = B.COMPANY
		AND A.ITNBR = B.ITEM  
		AND B.COMPANY = #{company_cd}
		AND B.PLANT = #{plant_cd}
		<if test="item != null and item != ''">
			AND B.ITEM >= #{item} 
		</if>
		AND B.YYYYMM = REPLACE(substr(#{yymm}, 1, 7), '-', '')
		
		AND ( B.BASIC_QTY <![CDATA[ <> ]]> 0 OR B.DEPS_QTY <![CDATA[ <> ]]> 0 OR B.OUT_QTY <![CDATA[ <> ]]> 0 OR B.STOCK_QTY <![CDATA[ <> ]]> 0 )
		GROUP BY B.ITEM , A.NAME, A.SPEC1, SF_ITNBR_TOT(A.COMPANY, A.ITNBR, '10'), A.IFORM
		ORDER BY B.ITEM
	</select>
	
	<!-- 자재수불 집계표(월별/자재별 수불집계표) -->
	<select id = "peg08_list1" parameterType="hashmap" resultType="hashmap">
		SELECT  A.YYYYMM,
			        A.ITEM,
			        B.NAME  ITEM_NAME_K,
			        B.SPEC1,
			        B.JIJIC,
			        SF_ITNBR_TOT(B.COMPANY, B.ITNBR, '10') STOCK_UM,
			        A.STOCK_PRICE,
			        TO_CHAR(A.LASTDEPS_DATE, 'YYYY-MM-DD') LASTEPS_DATE,
			        TO_CHAR(A.LASTOUT_DATE, 'YYYY-MM-DD') LASTOUT_DATE,
			        B.JEJOS,
			        SUM(A.BASIC_QTY) BASIC_QTY,
			        SUM(A.BASIC_AMT) BASIC_AMT,
			        SUM(A.DEPS_QTY) DEPS_QTY,
			        SUM(A.DEPS_AMT) DEPS_AMT,
			        SUM(A.OUT_QTY) OUT_QTY,
			        DECODE(SUM(A.OUT_QTY),0,0,SUM(A.OUT_AMT)) OUT_AMT,
			        DECODE(SUM(A.OUT_QTY),0,SUM(A.OUT_AMT),0) OUT_AMT_1,
			        DECODE(SUM(A.STOCK_AMT),0,0,SUM(A.STOCK_QTY)) STOCK_QTY,
			        SUM(A.STOCK_AMT) STOCK_AMT,
			        C.AGE_PRICE,
			        B.COMPANY
		FROM SALE.SAB01_MST B, PAD01_MST C,
		    (SELECT  YYYYMM, ITEM, TRUNC(STOCK_PRICE, 4) STOCK_PRICE,
		    LASTDEPS_DATE, LASTOUT_DATE,                                            
		    SUM(NVL(BASIC_QTY,0)) BASIC_QTY,
		    SUM(NVL(BASIC_AMT,0)) BASIC_AMT,
		    SUM(NVL(DEPS_QTY,0)) DEPS_QTY,
		    SUM(NVL(DEPS_AMT,0)) DEPS_AMT,
		    SUM(NVL(OUT_QTY,0)) OUT_QTY,
		    SUM(NVL(OUT_AMT,0)) OUT_AMT,
		    SUM(NVL(STOCK_QTY,0)) STOCK_QTY,
		    SUM(NVL(STOCK_AMT,0)) STOCK_AMT
		    FROM PROD.PEG01_MST                                                         
		    WHERE COMPANY = #{company_cd}
		    AND PLANT = #{plant_cd}
		    <if test = "yyyymm != null and yyyymm != ''"> 
		    	AND YYYYMM = REPLACE(substr(#{yyyymm}, 1, 7), '-', '')
		    </if>
		    GROUP BY YYYYMM, ITEM, STOCK_PRICE, LASTDEPS_DATE, LASTOUT_DATE, COMPANY) A                             
		WHERE B.COMPANY = #{company_cd}
		AND A.ITEM = B.ITNBR
		AND B.ITNBR = C.ITNBR
		AND SUBSTR(B.IFORM,1,1) = 'A'
		AND (A.BASIC_QTY <![CDATA[ <> ]]> 0 OR A.DEPS_QTY <![CDATA[ <> ]]> 0 OR A.OUT_QTY <![CDATA[ <> ]]> 0 OR A.STOCK_QTY <![CDATA[ <> ]]> 0 )
		AND A.ITEM <![CDATA[ <> ]]> '000000000'
		GROUP BY A.YYYYMM, A.ITEM, B.NAME, B.SPEC1, B.JIJIC, SF_ITNBR_TOT(B.COMPANY, B.ITNBR, '10'), A.STOCK_PRICE,A.LASTDEPS_DATE,A.LASTOUT_DATE,B.JEJOS,C.AGE_PRICE, B.COMPANY
		ORDER BY A.ITEM, A.YYYYMM
	</select>
	
	<!-- 자재수불 집계표(월별 금액집계표) -->
	<select id = "peg08_list2" parameterType="hashmap" resultType="hashmap">
		SELECT  AA.YYYYMM, 
			        ROUND(MAX(AA.BASIC_AMT)) BASIC_AMT,
			        ROUND(MAX(AA.DEPS_AMT)) DEPS_AMT,
			        ROUND(MAX(AA.OUT_AMT)) OUT_AMT,
			        ROUND(MAX(AA.STOCK_AMT)) STOCK_AMT,
			        SUM(BB.TOT_1) TOT_1,
			        SUM(BB.TOT_2) TOT_2,
			        SUM(BB.VAT) VAT,
		        	AA.COMPANY
		FROM    (SELECT     YYYYMM,
			        SUM(NVL(BASIC_AMT,0))     BASIC_AMT,
			        SUM(NVL(DEPS_AMT,0))    DEPS_AMT,
			        SUM(NVL(OUT_AMT,0))    OUT_AMT,
			        SUM(NVL(STOCK_AMT,0))    STOCK_AMT,
			        COMPANY
			        FROM  PEG01_MST 
			        WHERE YYYYMM BETWEEN SUBSTR(#{yyyymm},1,4)||'01' AND REPLACE(substr(#{yyyymm}, 1, 7), '-', '')
			        AND COMPANY = #{company_cd}
			        AND PLANT = #{plant_cd}
			        GROUP BY  YYYYMM , COMPANY
			        ) AA, 
			        ( SELECT A.TRM_YM YYYYMM,
			        A.VENDOR,
			        SUM(DECODE(C.MCCOD,'1',A.DEPS_AMT,0)) TOT_1,
			        SUM(DECODE(C.MCCOD,'2',A.DEPS_AMT,0)) TOT_2,
			        ROUND(SUM(DECODE(C.MCCOD,'1',A.DEPS_AMT,0)) * 0.1, 0) VAT
			        FROM PEH01_MST A, SALE.SAB01_MST C
			        WHERE A.COMPANY = #{company_cd}
			        AND A.PLANT   = #{plant_cd}
			        AND A.TRM_YM BETWEEN SUBSTR(#{yyyymm},1,4)||'01' AND REPLACE(substr(#{yyyymm}, 1, 7), '-', '')
			        AND A.COMPANY = C.COMPANY
			        AND A.ITEM = C.ITNBR
			        GROUP BY A.TRM_YM, A.VENDOR
			        ) BB
		WHERE AA.YYYYMM = BB.YYYYMM
		GROUP BY AA.YYYYMM, AA.COMPANY
		ORDER BY AA.YYYYMM
	</select>
	
	<!-- 자재수불 집계표(마감(전)집계표) -->
	<select id = "peg08_list3" parameterType="hashmap" resultType="hashmap">
		SELECT *
			FROM(
			  SELECT 	A.VENDOR VENDOR,
			             	B.BY_NM BY_NM,
			            	B.BU_CD BU_CD,
				            B.BY_TEL_NO,
				            B.BY_PRSN,
				            SUM(DECODE(C.MCCOD,'1',A.DEPS_AMT,0)) TOT_1,
				            ROUND(SUM(DECODE(C.MCCOD,'1',A.DEPS_AMT,0)) * 0.1, 0) TOT_1_R,
				            SUM(DECODE(C.MCCOD,'2',A.DEPS_AMT,0)) TOT_2,
				            SUM(NVL(A.DEPS_AMT,0))  QTY,
				            A.COMPANY
			    FROM PEB01_MST A, ACNT.SAA_BUYER B, SALE.SAB01_MST C
			   	WHERE A.COMPANY = #{company_cd}
			    AND A.PLANT   = #{plant_cd}
			    AND A.STEP_STATUS = '50' 
			    AND A.ITEM = C.ITNBR
			    AND A.DEPS_DATE BETWEEN TRUNC(TO_DATE(REPLACE(substr(#{yyyymm}, 1, 10), '-', '')), 'MONTH') AND LAST_DAY(TO_DATE(REPLACE(substr(#{yyyymm}, 1, 10), '-', '')))
			    AND B.BY_CD = A.VENDOR
				GROUP BY A.VENDOR, B.BY_NM, B.BU_CD, B.BY_TEL_NO, B.BY_PRSN, A.COMPANY
			) T
			WHERE QTY <![CDATA[ <> ]]> 0
			ORDER BY T.BY_NM
	</select>
	
	<!-- 자재수불 집계표(마감(후)집계표) -->
	<select id = "peg08_list4" parameterType="hashmap" resultType="hashmap">
		SELECT *
				FROM(
				        SELECT  A.VENDOR,
					                B.BY_NM,
					                B.BU_CD,
					                B.BY_TEL_NO,
					                B.BY_PRSN,
					                SUM(NVL(A.TAX_AMT,0)) VAT,
					                SUM(DECODE(C.MCCOD,'1',A.DEPS_AMT,0)) TOT_1,
					                ROUND(SUM(DECODE(C.MCCOD,'1',A.DEPS_AMT,0)) * 0.1, 0) TOT_1_R,
					                SUM(DECODE(C.MCCOD,'2',A.DEPS_AMT,0)) TOT_2,
					                SUM(NVL(A.PAY_AMT,0))  QTY,
					                A.TAX_WORK,
					                A.COMPANY
				        FROM PEH01_MST A, ACNT.SAA_BUYER B, SALE.SAB01_MST C
				        WHERE A.COMPANY = #{company_cd}
				        AND A.PLANT   = #{plant_cd}
				        AND A.ITEM = C.ITNBR
				        AND A.TRM_YM = REPLACE(substr(#{yyyymm}, 1, 7), '-', '')
				        AND B.BY_CD = A.VENDOR
				        GROUP BY A.VENDOR, B.BY_NM, B.BU_CD, B.BY_TEL_NO, B.BY_PRSN, A.TAX_WORK, A.COMPANY
				) T
				WHERE QTY <![CDATA[ <> ]]> 0
				ORDER BY T.BY_NM
	</select>
	
	<!-- 자재수불 집계표(실사용 재고리스트) -->
	<select id = "peg08_list5" parameterType="hashmap" resultType="hashmap">
		SELECT  A.YYYYMM,
			        A.ITEM,
			        B.NAME ITEM_NAME_K,
			        B.SPEC1 NORM1,
			        B.JIJIC,
			        SF_ITNBR_TOT(B.COMPANY, B.ITNBR, '10') STOCK_UM,
			        A.STOCK_PRICE,
			        TO_CHAR(A.LASTDEPS_DATE, 'YYYY-MM-DD') LASTDEPS_DATE,
			        TO_CHAR(A.LASTOUT_DATE, 'YYYY-MM-DD') LASTOUT_DATE,
			        B.JEJOS,
			        SUM(A.BASIC_QTY) BASIC_QTY,
			        SUM(A.BASIC_AMT) BASIC_AMT,
			        SUM(A.DEPS_QTY) DEPS_QTY,
			        SUM(A.DEPS_AMT) DEPS_AMT,
			        SUM(A.OUT_QTY) OUT_QTY,
			        DECODE(SUM(A.OUT_QTY),0,0,SUM(A.OUT_AMT)) OUT_AMT,
			        DECODE(SUM(A.OUT_QTY),0,SUM(A.OUT_AMT),0) OUT_AMT_1,
			        DECODE(SUM(A.STOCK_AMT),0,0,SUM(A.STOCK_QTY)) STOCK_QTY,
			        SUM(A.STOCK_AMT) STOCK_AMT,
			        C.AGE_PRICE,
			        B.COMPANY
		FROM SALE.SAB01_MST B, PAD01_MST C,
			    (SELECT YYYYMM, ITEM, TRUNC(STOCK_PRICE, 4) STOCK_PRICE,
			            LASTDEPS_DATE, LASTOUT_DATE,                                            
			            SUM(NVL(BASIC_QTY,0)) BASIC_QTY,
			            SUM(NVL(BASIC_AMT,0)) BASIC_AMT,
			            SUM(NVL(DEPS_QTY,0)) DEPS_QTY,
			            SUM(NVL(DEPS_AMT,0)) DEPS_AMT,
			            SUM(NVL(OUT_QTY,0)) OUT_QTY,
			            SUM(NVL(OUT_AMT,0)) OUT_AMT,
			            SUM(NVL(STOCK_QTY,0)) STOCK_QTY,
			            SUM(NVL(STOCK_AMT,0)) STOCK_AMT
			     FROM PROD.PEG01_MST                                                         
			     WHERE COMPANY = #{company_cd}
			     AND PLANT = #{plant_cd}
			     AND YYYYMM = REPLACE(substr(#{yyyymm}, 1, 7), '-', '')
			     GROUP BY YYYYMM, ITEM, STOCK_PRICE, LASTDEPS_DATE, LASTOUT_DATE, COMPANY) A                             
		WHERE B.COMPANY = #{company_cd} 
		AND A.ITEM = B.ITNBR
		AND B.ITNBR = C.ITNBR
		AND SUBSTR(B.IFORM,1,1) = 'A'
		AND (A.BASIC_QTY <![CDATA[ <> ]]> 0 OR A.DEPS_QTY <![CDATA[ <> ]]> 0 OR A.OUT_QTY <![CDATA[ <> ]]> 0 OR A.STOCK_QTY <![CDATA[ <> 0 ]]> )
		AND A.ITEM <![CDATA[ <> ]]> '000000000'
		AND A.STOCK_QTY <![CDATA[ <> ]]> 0
		GROUP BY A.YYYYMM, A.ITEM, B.NAME, B.SPEC1, B.JIJIC, SF_ITNBR_TOT(B.COMPANY, B.ITNBR, '10'), A.STOCK_PRICE,A.LASTDEPS_DATE,A.LASTOUT_DATE,B.JEJOS,C.AGE_PRICE, B.COMPANY
		ORDER BY  A.ITEM, A.YYYYMM
	</select>
	
	<!-- 자재수불 집계표(기간별/자재별 수불집계표) -->
	<select id = "peg08_list6" parameterType="hashmap" resultType="hashmap">
		SELECT  A.YYYYMM,
			        A.ITEM,
			        B.NAME  ITEM_NAME_K,
			        B.SPEC1 NORM1,
			        B.JIJIC JIJIC,
			        SF_ITNBR_TOT(B.COMPANY, B.ITNBR, '10') STOCK_UM,
			        A.STOCK_PRICE,
			        TO_CHAR(A.LASTDEPS_DATE, 'YYYY-MM-DD') LASTDEPS_DATE,
			        TO_CHAR(A.LASTOUT_DATE, 'YYYY-MM-DD') LASTOUT_DATE,
			        B.JEJOS,
			        SUM(A.BASIC_QTY) BASIC_QTY,
			        SUM(A.BASIC_AMT) BASIC_AMT,
			        SUM(A.DEPS_QTY) DEPS_QTY,
			        SUM(A.DEPS_AMT) DEPS_AMT,
			        SUM(A.OUT_QTY) OUT_QTY,
			        DECODE(SUM(A.OUT_QTY),0,0,SUM(A.OUT_AMT)) OUT_AMT,
			        DECODE(SUM(A.OUT_QTY),0,SUM(A.OUT_AMT),0) OUT_AMT_1,
			        DECODE(SUM(A.STOCK_AMT),0,0,SUM(A.STOCK_QTY)) STOCK_QTY,
			        SUM(A.STOCK_AMT) STOCK_AMT,
			        C.AGE_PRICE,
			        B.COMPANY
		FROM SALE.SAB01_MST B, PAD01_MST C,
		(SELECT YYYYMM, ITEM, TRUNC(STOCK_PRICE, 4) STOCK_PRICE,
		        LASTDEPS_DATE, LASTOUT_DATE,                                            
		        SUM(NVL(BASIC_QTY,0)) BASIC_QTY,
		        SUM(NVL(BASIC_AMT,0)) BASIC_AMT,
		        SUM(NVL(DEPS_QTY,0)) DEPS_QTY,
		        SUM(NVL(DEPS_AMT,0)) DEPS_AMT,
		        SUM(NVL(OUT_QTY,0)) OUT_QTY,
		        SUM(NVL(OUT_AMT,0)) OUT_AMT,
		        SUM(NVL(STOCK_QTY,0)) STOCK_QTY,
		        SUM(NVL(STOCK_AMT,0)) STOCK_AMT
		FROM PROD.PEG01_MST                                                         
		WHERE COMPANY = #{company_cd}
		AND PLANT = #{plant_cd}
		AND YYYYMM <![CDATA[ >= ]]> REPLACE(substr(#{yyyymm}, 1, 7), '-', '')
		AND YYYYMM <![CDATA[ <= ]]> REPLACE(substr(#{yyyymm2}, 1, 7), '-', '')
		GROUP BY YYYYMM, ITEM, STOCK_PRICE, LASTDEPS_DATE, LASTOUT_DATE, COMPANY) A                             
		WHERE B.COMPANY = #{company_cd} 
		AND A.ITEM = B.ITNBR
		AND B.ITNBR = C.ITNBR
		AND SUBSTR(B.IFORM,1,1) = 'A'
		AND (A.BASIC_QTY <![CDATA[ <> ]]> 0 OR A.DEPS_QTY <![CDATA[ <> ]]> 0 OR A.OUT_QTY <![CDATA[ <> ]]> 0 OR A.STOCK_QTY <![CDATA[ <> 0 ]]> )
		AND A.ITEM <![CDATA[ <> ]]> '000000000'
		GROUP BY A.YYYYMM, A.ITEM, B.NAME, B.SPEC1, B.JIJIC, SF_ITNBR_TOT(B.COMPANY, B.ITNBR, '10'), A.STOCK_PRICE,A.LASTDEPS_DATE,A.LASTOUT_DATE,B.JEJOS,C.AGE_PRICE, B.COMPANY
		ORDER BY  A.ITEM, A.YYYYMM
	</select>
	
	
	<!-- 월별 수입검사현황 조회 -->
	<select id = "pha03_list" parameterType="hashmap" resultType="hashmap">
		SELECT  B.VENDOR VENDOR_NAME,
			        TO_CHAR(B.INSP_DATE, 'YYYY-MM-DD') INSP_DATE,
			        B.PLANT,
			        A.ITEM,
			        C.NAME,
			        C.SPEC1 NORM1,
			        SF_ITNBR_TOT(A.COMPANY, A.ITEM, '10') STOCK_UM,
			        SUM(A.DELV_QTY) DELV_QTY,
			        SUM(A.INSP_QTY) INSP_QTY,
			        SUM(A.IQC_QTY) IQC_QTY,
			        SUM(A.ERR_QTY) ERR_QTY,
			        B.COMPANY
		FROM PROD.PHA01_DTL A, PROD.PHA01_MST B, SALE.SAB01_MST C
		WHERE B.COMPANY = #{company_cd}
		AND B.PLANT         = #{plant_cd} 
		<if test = "insp_date_fr != null and insp_date_fr != '' and insp_date_to != null and insp_date_to != ''">
			AND B.INSP_DATE BETWEEN REPLACE(substr(#{insp_date_fr}, 1, 10), '-', '') AND REPLACE(substr(#{insp_date_to}, 1, 10), '-', '')
		</if>
		<if test = "item1 != null and item1 != '' and item2 != null and item2 != ''">
			AND A.ITEM BETWEEN  #{item1} AND #{item2}
		</if>
		AND A.COMPANY = B.COMPANY
		AND A.PLANT   = B.PLANT
		AND A.INSP_NO = B.INSP_NO
		AND C.COMPANY = A.COMPANY 
		AND C.ITNBR   = A.ITEM
		GROUP BY B.VENDOR, B.INSP_DATE, B.PLANT, A.ITEM, C.NAME, C.SPEC1, SF_ITNBR_TOT(A.COMPANY, A.ITEM, '10') , B.COMPANY
		ORDER BY B.VENDOR, B.INSP_DATE, B.PLANT, A.ITEM
	</select>
	
	<!-- 검사 불량현황 발행 조회 -->
	<select id = "phb04_list" parameterType="hashmap" resultType="hashmap">
		SELECT  A.COMPANY,
			        A.PLANT,
			        C.MO_NO,
			        SF_PJTNO_DATA(A.COMPANY, A.PLANT, SUBSTR(C.MO_NO,1,8), '1') PJTNO_NM,
			        C.LOT_NO,
			        TO_CHAR(C.QC_DATE, 'YYYY-MM-DD') QC_DATE,
			        A.QC_NO,
			        C.GUBUN,
			        C.VENDOR,  
			        A.ITEM,   
			        B.NAME  ITEM_NAME_K,   
			        B.SPEC1 NORM1,  
			        nvl(C.QCREQ_QTY,0) QCREQ_QTY,
			        nvl(C.QC_QTY,0) QC_QTY,
			        nvl(A.ERR_QTY,0) ERR_QTY,
			        C.CREATE_BY, 
			        A.INS_KIND,     
			        A.ERR_TAG, 
			        A.ERR_ACT,   
			        A.QC_RESULT,   
			        A.REMARKS  
		FROM PROD.PHB02_MST        A,   
		SALE.SAB03_MST        B,
		PROD.PHB01_MST        C  
		WHERE A.COMPANY = #{company_cd}
		AND A.PLANT = #{plant_cd}
		<if test = "qc1 != null and qc1 != '' and qc2 != null and qc2 != ''">
			AND C.QC_DATE BETWEEN REPLACE(substr(#{qc1}, 1, 10), '-', '') AND REPLACE(substr(#{qc2}, 1, 10), '-', '')
		</if>
		<if test = "mo_no != null and mo_no != ''">
		AND C.MO_NO LIKE #{mo_no} || '%'
		</if>
		<if test = "lot_no != null and lot_no != ''">
		AND C.LOT_NO LIKE #{lot_no} || '%'
		</if>
		<if test = "task != null and task != ''">
		AND C.VENDOR LIKE #{task} || '%'
		</if>
		AND B.COMPANY = A.COMPANY
		AND B.ITNBR = A.ITEM
		AND A.COMPANY = C.COMPANY
		AND A.PLANT = C.PLANT
		AND A.QC_NO = C.QC_NO    
		ORDER BY C.MO_NO, C.LOT_NO,C.QC_DATE, A.QC_NO
	</select>
	
</mapper>	